{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"blog/create-a-single-node-slurm-cluster/","title":"Create a Single Node Slurm Cluster","text":"<p>In this blog, we'll guide you through the seamless upload of Flight solo image on alces cloud and then followed by the installation of a slurm standalone cluster installation. Our setup involves a single nodes that has slurm manager installed on it and that can be further used to execute HPC workloads.</p> <p>Let's start with a step-by-step process, starting from uploading flight solo image, then creating virtual machines on the Alces Cloud platform, followed by verification of setup by running a simple HPC job.</p>"},{"location":"blog/create-a-single-node-slurm-cluster/#upload-flight-solo-image","title":"Upload Flight Solo Image","text":"<ul> <li>Download the Flight Solo OpenStack image here</li> <li>Upload the image by following the steps provided in the link</li> </ul>"},{"location":"blog/create-a-single-node-slurm-cluster/#launch-the-instance","title":"Launch the Instance","text":"<p>All the steps to launch and connection to instance is provided in link.</p>"},{"location":"blog/create-a-single-node-slurm-cluster/#create-slurm-cluster-using-flight-solo","title":"Create Slurm Cluster Using Flight Solo","text":"<ol> <li> <p>Parse your node(s) with the command <code>flight hunter parse</code>.</p> <ol> <li> <p>This will display a list of hunted nodes, for example     <pre><code>[flight@myinstance.novalocal ~]$ flight hunter parse\nSelect nodes: (Scroll for more nodes)\n\u2023 \u2b21 myinstance.novalocal - 10.10.0.1\n</code></pre></p> </li> <li> <p>Select the desired node to be parsed with Space, and you will be taken to the label editor     <pre><code>Choose label: login-node.novalocal\n</code></pre></p> </li> <li> <p>Here, you can edit the label like plain text     <pre><code>Choose label: login1\n</code></pre></p> <p>Tip</p> <p>You can clear the current node name by pressing Down in the label editor.</p> </li> <li> <p>When done editing, press Enter to save. The modified node label will appear next to the ip address and original node label.     <pre><code>Select nodes: login-node.novalocal - 10.10.0.1 (login1) (Scroll for more nodes)\n\u2023 \u2b22 myinstance.novalocal - 10.10.0.1 (login1)\n</code></pre></p> </li> <li> <p>From this point, you can either hit Enter to finish parsing and process the selected nodes, or continue changing nodes. Either way, you can return to this list by running <code>flight hunter parse</code>.</p> </li> <li> <p>Save the node inventory before moving on to the next step.</p> <p>Tip</p> <p>See <code>flight hunter parse -h</code> for more ways to parse nodes.</p> </li> </ol> </li> </ol>"},{"location":"blog/create-a-single-node-slurm-cluster/#add-genders","title":"Add genders","text":"<ol> <li>Optionally, you may add genders to the newly parsed node. For example, in the case that the node should have the gender <code>cluster</code> and <code>all</code> then run the command:     <pre><code>flight hunter modify-groups --add cluster,all login1\n</code></pre></li> </ol>"},{"location":"blog/create-a-single-node-slurm-cluster/#slurm-standalone-configuration","title":"SLURM Standalone Configuration","text":"<ol> <li> <p>Configure profile</p> <pre><code>flight profile configure\n</code></pre> <ol> <li>This brings up a UI, where several options need to be set. Use up and down arrow keys to scroll through options and enter to move to the next option. Options in brackets coloured yellow are the default options that will be applied if nothing is entered.<ul> <li>Cluster type: The type of cluster setup needed, in this case select <code>Slurm Standalone</code>.</li> <li>Cluster name: The name of the cluster.</li> <li>Default user: The user that you log in with.</li> <li>Set user password: Set a password to be used for the chosen default user.</li> <li>IP or FQDN for Web Access: This could be the public IP or public hostname.</li> </ul> </li> </ol> </li> <li> <p>Apply an identity by running the command <code>flight profile apply</code>, E.g.     <pre><code>flight profile apply login1 all-in-one\n</code></pre></p> <p>Tip</p> <p>You can check all available identities for the current profile with <code>flight profile identities</code></p> </li> <li> <p>Wait for the identity to finish applying. You can check the status of all nodes with <code>flight profile list</code>.</p> <p>Tip</p> <p>You can watch the progress of the application with <code>flight profile view login1 --watch</code></p> <p>Success</p> <p>Congratulations, you've now created a SLURM Standalone environment.</p> </li> </ol>"},{"location":"blog/create-a-single-node-slurm-cluster/#run-slurm-workload","title":"Run Slurm Workload","text":"<ol> <li> <p>Create a file called <code>simplejobscript.sh</code>, and copy this into it:     <pre><code>#!/bin/bash -l\necho \"Starting running on host $HOSTNAME\"\nsleep 30\necho \"Finished running - goodbye from $HOSTNAME\"\n</code></pre></p> </li> <li> <p>Run the script with <code>sbatch simplejobscript.sh</code>, and to test all your nodes try queuing up enough jobs that all nodes will have to run.</p> </li> <li> <p>In the directory that the job was submitted from there should be a <code>slurm-X.out</code> where <code>X</code> is the Job ID returned from the <code>sbatch</code> command. This will contain the echo messages from the script created in step 1 </p> </li> </ol>"},{"location":"blog/kubernetes-installation-with-rke/","title":"Kubernetes Installation With RKE","text":"<p>In this blog, we'll guide you through the seamless installation of a Kubernetes cluster on a RHEL-based operating system. Our setup involves two nodes; one serving as both the RKE and master node, and the other dedicated as a worker node.</p> <p>Let's start with a step-by-step process, starting from creating virtual machines on the Alces Cloud platform, leading up to the installation of the Kubernetes cluster using RKE.</p>"},{"location":"blog/kubernetes-installation-with-rke/#launch-the-instance","title":"Launch the Instance","text":"<p>Launch 2 instances for our setup where one node will act as a rke and master node, whereas second node will act as worker node in the kubernetes cluster.</p> <p>All the steps to launch and connection to instance is provided in link.</p>"},{"location":"blog/kubernetes-installation-with-rke/#kubernetes-installation-with-rke_1","title":"Kubernetes Installation with RKE","text":"<p>Here we have 2 types of nodes: rke node: node where rke utility is installed that is responsible for installation of k8s cluster on other nodes. k8s nodes: nodes that are the part of k8s cluster where installation takes place.</p> <p>Prerequisites</p> <ul> <li> <p>Docker must be installed on all the nodes of k8s cluster.   <pre><code>sudo dnf check-update\nsudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo dnf install docker-ce docker-ce-cli containerd.io\nsudo systemctl start docker\nsudo systemctl status docker\nsudo systemctl enable docker\n\n# Execute docker cli without sudo\nsudo usermod -aG docker $(whoami)\n\n# You will need to log out of the Droplet and back in as the same user to enable this change.\n</code></pre></p> </li> <li> <p>password less ssh to all k8s nodes from rke node.</p> </li> </ul> <p>Here we are creating a cluster with one master node and one worker node, so number of vm required here is 2. we also need to setup a rke node as well.</p> <p>Initial setup for RKE node</p> <ul> <li>Install RKE    On the first instance we will be installing rke cli to install our cluster, below are the instructions.</li> </ul> <p><pre><code>wget https://github.com/rancher/rke/releases/download/v1.2.9/rke_linux-amd64 -O rke chmod +x rke\n</code></pre> - Perform a password-less ssh from rke node to k8s nodes. - Install kubectl to access k8s resources.</p> <pre><code>yum install epel-release\nyum install snapd\nsystemctl enable --now snapd.socket\nln -s /var/lib/snapd/snap /snap\nsnap install kubectl --classic\n</code></pre> <p>Initial setup for k8s node</p> <ol> <li> <p>Disabled selinux on all nodes and firewalld.     <pre><code>setenforce 0  \nsystemctl stop firewalld\n</code></pre></p> </li> <li> <p>Install Docker on all nodes.</p> </li> </ol> <pre><code>yum update \u2013y \nyum install -y yum-utils  \nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo \nyum install docker-ce docker-ce-cli containerd.io \nsystemctl start docker  \nsystemctl enable docker\n</code></pre> <p>Steps for installation of K8s cluster</p> <p>On the rke node, create a cluster.yml file specifying the user , ip of k8s nodes, type of networking , roles and version of k8s we want to install.</p> <pre><code># cluster.yml\nnodes: \n- address: 10.151.0.xx\n  user: rke \n  role: \n    - controlplane \n    - etcd \n  hostname_override: master\n\n- address: 10.151.0.xx\n  user: rke \n  role: \n    - worker\n  hostname_override: worker\n\nkubernetes_version: v1.20.8-rancher1-1\nnetwork: \n    plugin: canal\n</code></pre> <ol> <li> <p>Then execute ./rke up Sometimes it will say that docker version is not supported, then execute ./rke up --ignore-docker-version.</p> </li> <li> <p>Once the installation is complete you will get a file named kube_config_cluster.yml in the same directory i.e. the kubeconfig of cluster we have created.</p> </li> </ol>"},{"location":"blog/setup-openmpi-and-buildexecute-a-mpi-job/","title":"Setup OpenMPI and Build/Execute a MPI Job","text":"<p>In this blog, we'll guide you through the seamless installation of a OpenMPI on a RHEL-based operating system, building and running a MPI job. Our setup involves a single node.</p> <p>Let's start with a step-by-step process, starting from creating virtual machines on the Alces Cloud platform, leading up to the installation of OpenMPI and then execution of the MPI job.</p>"},{"location":"blog/setup-openmpi-and-buildexecute-a-mpi-job/#launch-the-instance","title":"Launch the Instance","text":"<p>All the steps to launch and connection to instance is provided in link.</p>"},{"location":"blog/setup-openmpi-and-buildexecute-a-mpi-job/#setup-openmpi-and-execute-a-job","title":"Setup OpenMPI and execute a Job","text":"<p>Installation of OpenMPI</p> <p>Below are the step to install OpenMPI on the RHEL based operating System.</p> <pre><code>sudo dnf makecache --refresh\nsudo dnf -y install openmpi\n</code></pre> <p>Build and Execute the MPI job</p> <p>Sample MPI job script is provided below.</p> <pre><code>#include &lt;mpi.h&gt;\n#include &lt;stdio.h&gt;\n\nint main(int argc, char** argv) {\n    // Initialize the MPI environment\n    MPI_Init(NULL, NULL);\n\n    // Get the number of processes\n    int world_size;\n    MPI_Comm_size(MPI_COMM_WORLD, &amp;world_size);\n\n    // Get the rank of the process\n    int world_rank;\n    MPI_Comm_rank(MPI_COMM_WORLD, &amp;world_rank);\n\n    // Get the name of the processor\n    char processor_name[MPI_MAX_PROCESSOR_NAME];\n    int name_len;\n    MPI_Get_processor_name(processor_name, &amp;name_len);\n\n    // Print off a hello world message\n    printf(\"Hello world from processor %s, rank %d out of %d processors\\n\",\n           processor_name, world_rank, world_size);\n\n    // Finalize the MPI environment.\n    MPI_Finalize();\n}\n</code></pre> <p>Below are the step to build and execute the MPI job.</p> <pre><code># copy the script content in file mpi-hello-world.c\nvi mpi-hello-world.c\n\n# load mpi module \nmodule load mpi\n\n# build the mpi job \nmpicc -o mpi mpi-hello-world.c\n\n# Execute the MPI job\nmpirun -np 4 mpi\n\n# Results\nHello world from processor myinstance.novalocal, rank 1 out of 4 processors\nHello world from processor myinstance.novalocal, rank 2 out of 4 processors\nHello world from processor myinstance.novalocal, rank 0 out of 4 processors\nHello world from processor myinstance.novalocal, rank 3 out of 4 processors\n</code></pre>"},{"location":"blog/installation-and-configuration-of-minio/","title":"Installation and configuration of Minio","text":"<p>In this blog, we'll guide you through the installation of a MiniIO on a linux based operating system.</p> <p>Let's start with a step-by-step process, starting from creating virtual machines on the Alces Cloud platform, then attaching and mounting a block volume and leading up to the installation of MinIO storage and its operations.</p>"},{"location":"blog/installation-and-configuration-of-minio/#launch-the-instance","title":"Launch the Instance","text":"<p>All the steps to launch and connection to instance is provided in link.</p>"},{"location":"blog/installation-and-configuration-of-minio/#create-attach-and-mount-volume-to-instance","title":"Create, attach and mount volume to instance","text":"<p>All the steps to create, attach and mounting of volume to instance is provided in link</p> <p>Note</p> <p>Just Make sure port <code>22, 9000, 9001, 80, 443</code> is opened as ingress rule in security group that is attached to the instance. If <code>firewalld</code> is enabled on the server, open the ports <code>9000</code> and <code>9001</code> required by the MinIO server. You also need to open port <code>80</code> and <code>443</code> required for SSL access.</p> <p>Use the below commands to open the required ports. <pre><code>sudo firewall-cmd --zone=public --add-port=9000/tcp --permanent\nsudo firewall-cmd --zone=public --add-port=9001/tcp --permanent\nsudo firewall-cmd --permanent --add-service=http\nsudo firewall-cmd --permanent --add-service=https\n</code></pre></p> <p>To apply the changes and reload the firewalld run below command <pre><code>sudo firewall-cmd --reload\n</code></pre></p>"},{"location":"blog/installation-and-configuration-of-minio/#setup-minio","title":"Setup MinIO","text":"<p>MinIO is a S3-compatible object storage server, It supports clients for multiple platforms and offers a web interface for managing objects and users.</p> <p>MinIO Installation Steps</p> <ul> <li> <p>MinIO comes in the form of a binary file, You can download it from the official website.     <pre><code>sudo wget https://dl.min.io/server/minio/release/linux-amd64/minio -O /usr/local/bin/minio\n</code></pre></p> </li> <li> <p>Make the file executable by adjusting its permissions.     <pre><code>sudo chmod +x /usr/local/bin/minio\n</code></pre></p> </li> <li> <p>Ensure proper SELinux permissions are set for the file.     <pre><code>sudo restorecon -v /usr/local/bin/minio\n</code></pre></p> </li> <li> <p>To confirm the installation, check the version information.     <pre><code>minio --version\nminio version RELEASE.2024-03-15T01-07-19Z\n</code></pre></p> </li> </ul> <p>Configure and Setup Service of MinIO</p> <ul> <li> <p>Set up a  user to operate the MinIO server.     <pre><code>sudo useradd -r minio-user -s /sbin/nologin\n</code></pre></p> </li> <li> <p>Adjust the ownership of the MinIO binary.     <pre><code>sudo chown minio-user:minio-user /usr/local/bin/minio\n</code></pre></p> </li> <li> <p>Establish a directory to store MinIO server configuration files.     <pre><code>sudo mkdir /etc/minio\n</code></pre></p> </li> <li> <p>Ensure the ownership of the configuration directory is appropriately set.     <pre><code>sudo chown minio-user:minio-user /etc/minio\n</code></pre></p> </li> <li> <p>Assign ownership to the directory where data will be mounted.     <pre><code>sudo chown minio-user:minio-user /data\n</code></pre></p> </li> <li> <p>Create the default environment file and open it for update.     <pre><code>sudo nano /etc/default/minio\n</code></pre></p> </li> <li> <p>Within the file, insert the following lines:     <pre><code>MINIO_VOLUMES=\"/data\"\nMINIO_OPTS=\"-C /etc/minio --address :9000 --console-address :9001\"\nMINIO_ROOT_USER=\"minio\"\nMINIO_ROOT_PASSWORD=\"ChooseAVeryStrongPassword\"\n</code></pre></p> </li> <li> <p>Retrieve the service unit file from MinIO's GitHub repository.     <pre><code>sudo wget https://raw.githubusercontent.com/minio/minio-service/master/linux-systemd/minio.service -O /etc/systemd/system/minio.service\n</code></pre></p> </li> <li> <p>Adjust SELinux settings to authorize the service execution.     <pre><code>sudo restorecon -v /etc/systemd/system/minio.service\n</code></pre></p> </li> <li> <p>Refresh the service daemon.     <pre><code>sudo systemctl daemon-reload\n</code></pre></p> </li> <li> <p>Enable and start MinIO service.     <pre><code>sudo systemctl enable minio\nsudo systemctl start minio\n</code></pre></p> </li> <li> <p>Verify the status of MinIO Service     <pre><code>systemctl status minio\n</code></pre></p> </li> </ul> <p>You can now access the MinIO console through the following URL in your web browser: <code>http://your_server_ip:9001</code>. Log in using the root username and password you previously configured.</p> <p>Enable SSL on MinIO(Optional)</p> <p>We are using Certbot and Let's Encrypt API to enable SSL, Make sure Certbot is installed on the system, if it is not installed follow below steps.</p> <ul> <li> <p>Install the EPEL repository and Certbot     <pre><code>sudo dnf install epel-release\nsudo dnf install certbot\n</code></pre></p> </li> <li> <p>Request an SSL certificate for MinIO using standalone mode:     <pre><code>sudo certbot certonly --standalone --agree-tos --no-eff-email --preferred-challenges http -m name@alces.com -d minio.alces.com\n</code></pre></p> </li> <li> <p>The SSL certificate is now accessible from the /etc/letsencrypt/live/minio.alces.com directory, Copy the certificate files to the /etc/minio/certs folder:     <pre><code>sudo cp /etc/letsencrypt/live/minio.alces.com/privkey.pem /etc/minio/certs/private.key\nsudo cp /etc/letsencrypt/live/minio.alces.com/fullchain.pem /etc/minio/certs/public.crt\n</code></pre></p> </li> <li> <p>Adjust ownership of the certificates:     <pre><code>sudo chown minio-user:minio-user /etc/minio/certs/private.key\nsudo chown minio-user:minio-user /etc/minio/certs/public.crt\n</code></pre></p> </li> <li> <p>Open the MinIO default configuration file, Add the following line at the bottom and Save the file by pressing CTRL+X, then Y.     <pre><code>sudo nano /etc/default/minio\nMINIO_SERVER_URL=\"https://minio.alces.com:9000\"\n</code></pre></p> </li> <li> <p>Restart the MinIO Server to apply the changes:     <pre><code>sudo systemctl restart minio\n</code></pre></p> </li> </ul> <p>To access MinIO, simply navigate to the URL <code>https://minio.alces.com:9001</code> in your web browser. Log in using the root username and password you previously configured.</p> <p>Once logged in, you can begin utilizing MinIO to create buckets and store your data. Whether you prefer the official MinIO client or any S3 compatible tool, you'll have full access to manage and interact with your uploaded data.</p>"},{"location":"blog/how-to-install-and-use-docker/","title":"How to install and use Docker","text":"<p>In this blog post, we will provide a comprehensive guide on installing Docker, followed by a detailed walkthrough on its usage on a rocky based operating system. Our setup revolves around a single node with Docker installed, ready to facilitate the execution of Docker containers.</p> <p>Let's start with a step-by-step process, starting from creating virtual machines on the Alces Cloud platform, followed by installation of docker and how to use docker cli to perform docker operations.</p>"},{"location":"blog/how-to-install-and-use-docker/#launch-the-instance","title":"Launch the Instance","text":"<p>All the steps to launch and connection to instance is provided in link.</p>"},{"location":"blog/how-to-install-and-use-docker/#setup-docker","title":"Setup Docker","text":"<p>The Docker installation package provided in the official Rocky Linux 9 repository might not always be the most up-to-date version. For access to the latest features and updates, it's recommended to install Docker directly from the official Docker repository. Use below command to update package database and add docker repository.</p> <pre><code>sudo dnf check-update\nsudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre> <p>Now install the Docker using below commands.</p> <pre><code>sudo dnf update -y\nsudo dnf install -y docker-ce docker-ce-cli containerd.io\n</code></pre> <p>After the installation of docker, enable and start the docker.  <pre><code>sudo systemctl enable docker\nsudo systemctl start docker\n</code></pre></p>"},{"location":"blog/how-to-install-and-use-docker/#verify-docker","title":"Verify Docker","text":"<p>You can check the web server is up and running by using the below command  <pre><code>systemctl status docker\n\nOutput\n------\n\u25cf docker.service - Docker Application Container Engine\n     Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; preset: disabled)\n     Active: active (running) since Wed 2024-03-20 16:18:27 UTC; 40s ago\nTriggeredBy: \u25cf docker.socket\n       Docs: https://docs.docker.com\n   Main PID: 50100 (dockerd)\n      Tasks: 10\n     Memory: 34.7M\n        CPU: 395ms\n     CGroup: /system.slice/docker.service\n             \u2514\u250050100 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\n</code></pre></p>"},{"location":"blog/how-to-install-and-use-docker/#execute-docker-command-without-sudo-optional","title":"Execute Docker command without sudo (optional)","text":"<p>By default, the docker command requires root privileges to run, requiring the command to be prefixed with sudo.</p> <p>To bypass the need for typing sudo each time you use the docker command, include your username in the docker group: <pre><code>sudo usermod -aG docker $(whoami)\n</code></pre> Afterwards, log out of the Droplet and log back in as the same user to activate this modification.</p> <p>If you wish to add a user to the docker group for a user other than the one you're logged in as, specify the username explicitly: <pre><code>sudo usermod -aG docker username\n</code></pre></p>"},{"location":"blog/how-to-install-and-use-docker/#working-with-docker-command","title":"Working with Docker command","text":"<p>You can use  the following command to display a list of all available subcommands and additional help: <pre><code>docker --help\n</code></pre></p> <p>For more detailed information about a specific subcommand, you can type: <pre><code>docker docker-subcommand --help\n</code></pre></p> <p>Working with Docker images</p> <p>Docker containers operate on Docker images. Images are fetched from Docker Hub, a registry operated by Docker. Docker Hub enables anyone to construct and share their Docker images, making it a central repository for a wide array of applications and Linux distributions necessary for Docker container deployment.</p> <p>To ensure Docker is functioning correctly, execute the following command: <pre><code>docker run hello-world\n\nOutput\n------\nHello from Docker.\nThis message shows that your installation appears to be working correctly.\n...\n</code></pre></p> <p>The displayed output confirms Docker's operational status.</p> <p>To search for an image on Docker Hub, run the following command: <pre><code>docker search ubuntu\n\nOutput\n------\nNAME                             DESCRIPTION                                     STARS     OFFICIAL\nubuntu                           Ubuntu is a Debian-based Linux operating sys\u2026   16959     [OK]\nubuntu-debootstrap               DEPRECATED; use \"ubuntu\" instead                52        [OK]\nwebsphere-liberty                WebSphere Liberty multi-architecture images \u2026   298       [OK]\nopen-liberty                     Open Liberty multi-architecture images based\u2026   64        [OK]\nneurodebian                      NeuroDebian provides neuroscience research s\u2026   107       [OK]\nubuntu-upstart                   DEPRECATED, as is Upstart (find other proces\u2026   115       [OK]\nubuntu/nginx                     Nginx, a high-performance reverse proxy &amp; we\u2026   112\nubuntu/squid                     Squid is a caching proxy for the Web. Long-t\u2026   86\nubuntu/cortex                    Cortex provides storage for Prometheus. Long\u2026   4\nubuntu/prometheus                Prometheus is a systems and service monitori\u2026   58\nubuntu/apache2                   Apache, a secure &amp; extensible open-source HT\u2026   71\nubuntu/kafka                     Apache Kafka, a distributed event streaming \u2026   44\nubuntu/bind9                     BIND 9 is a very flexible, full-featured DNS\u2026   80\nubuntu/zookeeper                 ZooKeeper maintains configuration informatio\u2026   13\nubuntu/mysql                     MySQL open source fast, stable, multi-thread\u2026   61\nubuntu/jre                       Distroless Java runtime based on Ubuntu. Lon\u2026   13\nubuntu/postgres                  PostgreSQL is an open source object-relation\u2026   35\n</code></pre></p> <p>Once we found the image, we can pull the image locally <pre><code>docker pull ubuntu\n</code></pre></p> <p>To view the images downloaded to your system, use the command: <pre><code>docker images\n\nOutput\n------\nREPOSITORY    TAG       IMAGE ID       CREATED         SIZE\nubuntu        latest    ca2b0f26964c   3 weeks ago     77.9MB\nhello-world   latest    d2c94e258dcb   10 months ago   13.3kB\n</code></pre></p> <p>Running a Docker container</p> <p>In last steps we have successfully downloaded Docker images (<code>hello-world and ubuntu:latest</code>). Now we will be running the Docker container using the latest image of ubuntu However, this time, we will interacting with the container shell by executing the following command:</p> <pre><code>docker run -it ubuntu\n\nOutput\n------\n[root@59839a1b7de2 /]#\n</code></pre> <p>To list all the docker containers in the system, run the below command  <pre><code>docker ps -a\nCONTAINER ID   IMAGE         COMMAND       CREATED              STATUS                          PORTS     NAMES\nf8b4958bcda6   ubuntu        \"/bin/bash\"   10 seconds ago       Exited (0) 5 seconds ago                  competent_nobel\ndbcb92c48a44   hello-world   \"/hello\"      About a minute ago   Exited (0) About a minute ago             brave_carver\n</code></pre></p> <p>Note</p> <p>For more information about Docker, please refer to the official Docker documentation link</p>"},{"location":"blog/setup-nginxapache-webserver/","title":"Setup Nginx/Apache Webserver","text":"<p>In this blog, we'll guide you through the installation of a NGINX and Apache webserver on a rocky based operating system.</p> <p>Let's start with a step-by-step process, starting from creating virtual machines on the Alces Cloud platform, leading up to the installation of NGINX and Apache webserver.</p>"},{"location":"blog/setup-nginxapache-webserver/#launch-the-instance","title":"Launch the Instance","text":"<p>All the steps to launch and connection to instance is provided in link.</p> <p>Note</p> <p>Just Make sure port <code>22, 80, 443</code> is opened as ingress rule in security group that is attached to the instance. If <code>firewalld</code> is enabled on the server, in order to allow external connection on your nginx web server which runs on port <code>80</code> by default we need to update the setting by running the below command <pre><code>sudo firewall-cmd --permanent --add-service=http\n</code></pre></p> <p>To verify that the http firewall service was added correctly, you can run: <pre><code>sudo firewall-cmd --permanent --list-all\n\nOutput\n------\npublic\ntarget: default\nicmp-block-inversion: no\ninterfaces: \nsources: \nservices: cockpit dhcpv6-client http ssh\nports: \nprotocols: \nmasquerade: no\nforward-ports: \nsource-ports: \nicmp-blocks: \nrich rules: \n</code></pre></p> <p>To apply the changes and reload the firewalld run below command <pre><code>sudo firewall-cmd --reload\n</code></pre></p>"},{"location":"blog/setup-nginxapache-webserver/#setup-nginx","title":"Setup Nginx","text":"<p>Nginx is available in Rocky default repositories so you can install it with a single command. <pre><code>sudo dnf update -y\nsudo dnf install -y nginx \n</code></pre></p> <p>After the installation of nginx, enable and start the nginx web server.  <pre><code>sudo systemctl enable nginx\nsudo systemctl start nginx\n</code></pre></p>"},{"location":"blog/setup-nginxapache-webserver/#verify-nginx","title":"Verify Nginx","text":"<p>You can check the web server is up and running by using the below command  <pre><code>systemctl status nginx\n\nOutput\n------\n\u25cf nginx.service - The nginx HTTP and reverse proxy server\n     Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; preset: disabled)\n     Active: active (running) since Mon 2024-03-18 11:44:58 UTC; 2s ago\n    Process: 50672 ExecStartPre=/usr/bin/rm -f /run/nginx.pid (code=exited, status=0/SUCCESS)\n    Process: 50673 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)\n    Process: 50674 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)\n   Main PID: 50675 (nginx)\n      Tasks: 5 (limit: 100136)\n     Memory: 4.6M\n        CPU: 42ms\n     CGroup: /system.slice/nginx.service\n             \u251c\u250050675 \"nginx: master process /usr/sbin/nginx\"\n             \u251c\u250050676 \"nginx: worker process\"\n             \u251c\u250050677 \"nginx: worker process\"\n             \u251c\u250050678 \"nginx: worker process\"\n             \u2514\u250050679 \"nginx: worker process\"\n</code></pre></p> <p>You can also check the nginx is working properly or not by navigating to your server\u2019s IP address, if it is working fine then it will open the the default Nginx landing page.</p> <p>When you have your server\u2019s IP address, enter it into your browser\u2019s address bar: <pre><code>http://server_ip\n</code></pre></p> <p>It will open the landing page of nginx like below. </p>"},{"location":"blog/setup-nginxapache-webserver/#manage-nginx-server-process","title":"Manage Nginx server process","text":"<p>Various operations can be performed on the nginx process to change its state.</p> <p>To stop the web server, run the below command. <pre><code>sudo systemctl stop nginx\n</code></pre></p> <p>To start the web server, run the below command. <pre><code>sudo systemctl start nginx\n</code></pre></p> <p>To stop and then start the web server, run the below command. <pre><code>sudo systemctl restart nginx\n</code></pre></p> <p>Sometimes some configuration changes are done, in order to reload the nginx without dropping the connection run below command. <pre><code>sudo systemctl reload nginx\n</code></pre></p> <p>Configure Nginx to start automatically when the server boots, run below command <pre><code>sudo systemctl enable nginx\n</code></pre></p> <p>Configure Nginx not to start automatically when the server boots, run below command <pre><code>sudo systemctl disable nginx\n</code></pre></p>"},{"location":"blog/setup-nginxapache-webserver/#troubleshooting-tips","title":"Troubleshooting Tips","text":"<p>If you encounter issues, check the Nginx error logs for clues: <pre><code>sudo journalctl -u nginx\n</code></pre></p> <p>Note</p> <p>For more information, refer to nginx docs link</p>"},{"location":"blog/setup-nginxapache-webserver/#setup-apache","title":"Setup Apache","text":"<p>Nginx is available in Rocky\u2019s default repositories so you can install it with a single command. <pre><code>sudo dnf update -y\nsudo dnf install -y httpd \n</code></pre></p> <p>After the installation of nginx, enable and start the nginx web server.  <pre><code>sudo systemctl enable httpd\nsudo systemctl start httpd\n</code></pre></p>"},{"location":"blog/setup-nginxapache-webserver/#verify-apache","title":"Verify Apache","text":"<p>You can check the web server is up and running by using the below command  <pre><code>systemctl status httpd\n\nOutput\n------\n\u25cf httpd.service - The Apache HTTP Server\n     Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; preset: disabled)\n     Active: active (running) since Mon 2024-03-18 11:51:50 UTC; 6s ago\n       Docs: man:httpd.service(8)\n   Main PID: 51098 (httpd)\n     Status: \"Started, listening on: port 80\"\n      Tasks: 213 (limit: 100136)\n     Memory: 42.0M\n        CPU: 97ms\n     CGroup: /system.slice/httpd.service\n             \u251c\u250051098 /usr/sbin/httpd -DFOREGROUND\n             \u251c\u250051099 /usr/sbin/httpd -DFOREGROUND\n             \u251c\u250051100 /usr/sbin/httpd -DFOREGROUND\n             \u251c\u250051101 /usr/sbin/httpd -DFOREGROUND\n             \u2514\u250051102 /usr/sbin/httpd -DFOREGROUND\n</code></pre></p> <p>You can also check the Apache is working properly or not by navigating to your server\u2019s IP address, if it is working fine then it will open the the default Apache landing page.</p> <p>When you have your server\u2019s IP address, enter it into your browser\u2019s address bar: <pre><code>http://server_ip\n</code></pre></p> <p>It will open the landing page of Apache like below. </p>"},{"location":"blog/setup-nginxapache-webserver/#manage-apache-server-process","title":"Manage Apache server process","text":"<p>Various operations can be performed on the apache process to change its state.</p> <p>To stop the web server, run the below command. <pre><code>sudo systemctl stop httpd\n</code></pre></p> <p>To start the web server, run the below command. <pre><code>sudo systemctl start httpd\n</code></pre></p> <p>To stop and then start the web server, run the below command. <pre><code>sudo systemctl restart httpd\n</code></pre></p> <p>Sometimes some configuration changes are done, in order to reload the Apache without dropping the connection run below command. <pre><code>sudo systemctl reload httpd\n</code></pre></p> <p>Configure Apache to start automatically when the server boots, run below command <pre><code>sudo systemctl enable httpd\n</code></pre></p> <p>Configure Apache not to start automatically when the server boots, run below command <pre><code>sudo systemctl disable httpd\n</code></pre></p>"},{"location":"blog/setup-nginxapache-webserver/#troubleshooting-tips_1","title":"Troubleshooting Tips","text":"<p>If you encounter issues, check the Apache error logs for clues: <pre><code>sudo journalctl -u httpd\n</code></pre></p> <p>Note</p> <p>For more information, refer to Apache docs link</p>"},{"location":"docs/","title":"Welcome to the Alces Cloud Knowledgebase","text":"<p>Alces Cloud is a HPC focused cloud offering, backed by purpose built infrastructure tailored for HPC workloads. Alces Cloud offers the ability for users to customise their environments and test new applications as well as trial our Flight Tool Suite.</p> <p>This guide provides details of how to use the Alces Cloud Infrastructure-as-a-Service solution. Using the Alces Cloud dashboard users can create virtual instances for production, test and development purposes. The virtual instances can be of differing sizes and run a variety of Linux operating systems.</p> <p>To begin using Alces Cloud, check out our Getting Started guide.</p>"},{"location":"docs/compute/console/","title":"Remote Console","text":"<p>Access to a remote console for your instance is available through the Alces Cloud dashboard. This can be useful when troubleshooting issues with your instances.</p> <p>On the left side bar, navigate to <code>Compute</code> and then <code>Instances</code>. Click on your instance name and then select the <code>Console</code> tab.</p> <p></p>"},{"location":"docs/compute/flavors/","title":"Flavors","text":"<p>Alces Cloud instances are available in a number of flavors. The flavor chosen will define the resources available to your instance.</p> <p>Currently, there are two flavors available on Alces Cloud with the following sizes:</p> Flavor VCPUs RAM Ephemeral Disk Root Disk I/O Limit c1.small 6 48 GB 700 GB 150 GBi 50 MB/s Read + Write c1.large 12 96 GB 1400 GB 300 GB 100 MB/s Read + Write <p>Info</p> <p>I/O limits apply to instances booted using a local root disk. If you choose to boot your instance from a volume, the relevant volume limits will apply instead.</p> <p>You can also view these using the command line:</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack flavor list\n+--------------------------------------+---------------------------------+-------+------+-----------+-------+-----------+\n| ID                                   | Name                            |   RAM | Disk | Ephemeral | VCPUs | Is Public |\n+--------------------------------------+---------------------------------+-------+------+-----------+-------+-----------+\n| 26b933e3-4fde-4e10-9556-16b2e470cadf | c1.small                        | 49152 |  150 |       700 |     6 | False     |\n| d538bd2d-10ce-4555-8d1d-46535ee815ee | c1.large                        | 98304 |  300 |      1400 |    12 | False     |\n+--------------------------------------+---------------------------------+-------+------+-----------+-------+-----------+\n</code></pre>"},{"location":"docs/compute/flavors/#understanding-instance-storage-options","title":"Understanding Instance Storage Options","text":"<p>Choosing the right storage solution for your virtual machines (VMs) is crucial for optimal performance and data protection. Let's understand the key differences between local disks (root and ephemeral) and Ceph-backed volumes, helps you to make informed decisions based on your specific needs.</p> <p>Local Disk</p> <p>Local Disk is a storage in which data of virtual machines is present on the physical compute node due to which it provides good speed. It has some drawbacks as well i.e. lack of persistence of data when virtual machine is terminated and lack of redundancy that means if hardware on which id spawned faces failure then all data is lost.</p> <p>Types of Local Disk are given below: - Root Disk: Root Disk stores the operating system and essential boot files. Since it resides on the compute node's local disk, the root disk offers exceptional read/write speeds, making it ideal for applications requiring fast access to frequently used data.</p> <ul> <li>Ephemeral Disk: Ephemeral Disk provides additional temporary storage for your VM. Similar to the root disk, ephemeral disks provide impressive speeds, perfect for storing temporary files, caches, or workloads requiring quick data access.</li> </ul> <p>In simpler terms, root disk is like the permanent hard drive on your personal computer, where your OS and core files reside whereas ephemeral disk is like a USB flash drive attached to your computer, offering extra space but temporary storage.</p> <p>Volumes Disk Volume-based disks utilize distributed storage systems spread across multiple nodes, offering a balance between performance, redundancy, and scalability. Data stored on volumes persists even after VM reboots or terminations, making them ideal for critical application data, databases, or user files.</p> <p>While volumes may exhibit slightly lower read/write speeds compared to local disks due to the distributed storage architecture, they offer enhanced data protection and availability.</p> <p>Your data is replicated across multiple Ceph nodes, ensuring high availability. Even in the event of a node failure, your data remains safeguarded on other nodes, highlighting the robust redundancy mechanisms inherent to Ceph-backed volumes.</p>"},{"location":"docs/compute/images/","title":"Images","text":"<p>Alces Cloud includes a number of public images for common operating systems. Users are also able to upload their own images if required.</p> <p>The following images are currently available on Alces Cloud:</p> Name Description Default User Rocky 9.3 Rocky Linux release 9.3 (Blue Onyx) rocky Ubuntu 22.04.3 (LTS) Ubuntu 22.04.3 (Long Term Support) ubuntu"},{"location":"docs/compute/images/#upload-images","title":"Upload Images","text":"<p>You can upload the image to Alces cloud.</p> <p>Note</p> <p>Only images in RAW format are supported. You can convert images to this format using the <code>qemu-img convert</code> command.</p> CLIGUI <p>From the Alces Cloud login node, you can use the <code>openstack</code> command:</p> <pre><code>usage: openstack image create [-h] [-f {json,shell,table,value,yaml}] [-c COLUMN] [--noindent]\n                          [--prefix PREFIX] [--max-width &lt;integer&gt;] [--fit-width] [--print-empty]\n                          [--id &lt;id&gt;] [--container-format &lt;container-format&gt;]\n                          [--disk-format &lt;disk-format&gt;] [--min-disk &lt;disk-gb&gt;] [--min-ram &lt;ram-mb&gt;]\n                          [--file &lt;file&gt; | --volume &lt;volume&gt;] [--force] [--progress]\n                          [--sign-key-path &lt;sign-key-path&gt;] [--sign-cert-id &lt;sign-cert-id&gt;]\n                          [--protected | --unprotected]\n                          [--public | --private | --community | --shared] [--property &lt;key=value&gt;]\n                          [--tag &lt;tag&gt;] [--project &lt;project&gt;] [--import]\n                          [--project-domain &lt;project-domain&gt;]\n                          &lt;image-name&gt;\n# For more information about the parameters, run command \"openstack image create --help\".\n</code></pre> <p>To upload an image into Alces Cloud, the image needs to first exist on your machine, here we are following an example to upload the cirros image in Alces cloud.</p> <ul> <li>Download the cirros Image, if not present on your local machine.     <pre><code>wget https://download.cirros-cloud.net/0.5.2/cirros-0.5.2-x86_64-disk.img\n</code></pre></li> <li> <p>Convert the image to RAW     <pre><code>qemu-img convert cirros-0.5.2-x86_64-disk.img cirros-0.5.2-x86_64-disk.raw\n</code></pre></p> </li> <li> <p>Upload the image into Alces Cloud     <pre><code>(openstack) [user@stack01[poc1] ~]$] ~]$ openstack image create cirros --container-format bare --disk-format raw --file cirros-0.5.2-x86_64-disk.raw\n+------------------+--------------------------------------------------------------------------------------+\n| Field            | Value                                                                                |\n+------------------+--------------------------------------------------------------------------------------+\n| container_format | bare                                                                                 |\n| created_at       | 2024-03-13T09:23:27Z                                                                 |\n| disk_format      | raw                                                                                  |\n| file             | /v2/images/5df0d202-c4c4-476c-ad04-cf7c41003df0/file                                 |\n| id               | 5df0d202-c4c4-476c-ad04-cf7c41003df0                                                 |\n| min_disk         | 0                                                                                    |\n| min_ram          | 0                                                                                    |\n| name             | cirros                                                                               |\n| owner            | 17234a6cc8954d748ed74a31680ea39b                                                     |\n| properties       | os_hidden='False', owner_specified.openstack.md5='',                                 |\n|                  | owner_specified.openstack.object='images/cirros',                                    |\n|                  | owner_specified.openstack.sha256=''                                                  |\n| protected        | False                                                                                |\n| schema           | /v2/schemas/image                                                                    |\n| status           | queued                                                                               |\n| tags             |                                                                                      |\n| updated_at       | 2024-03-13T09:23:27Z                                                                 |\n| visibility       | shared                                                                               |\n+------------------+--------------------------------------------------------------------------------------+\n</code></pre></p> </li> <li> <p>To confirm the image uploaded into the cloud, use <code>openstack image list</code>.</p> </li> </ul> <ul> <li>From the Alces Cloud dashboard, click <code>Compute</code> and then <code>Images</code>:</li> <li>Click <code>Create Image</code>, then <code>Create An Image</code> dialog box will appear.</li> <li> <p>Enter the following values:</p> Field Description Image Name Enter a name for the image. Image Description Enter a description of the image. Image Source Choose the image source from the dropdown list. Your choices are Image Location and Image File. Image File Location Based on your selection for Image Source, you either enter the location URL of the image or browse for the image file on your file system and add it. Format Select the image format for the image. Only RAW images are supported. Architecture Specify the architecture. For example, i386 for a 32-bit architecture or x86_64 for a 64-bit architecture. Minimum Disk (GB) Leave this field empty. Minimum RAM (MB) Leave this field empty. Copy Data Specify this option to copy image data to the Image service. Visibility The access permission for the image. Public or Private. Protected Select this check box to ensure that only users with permissions can delete the image. Yes or No. Image Metadata Specify this option to add resource metadata. The glance Metadata Catalog provides a list of metadata image definitions. (Note: Not all cloud providers enable this feature.) </li> <li> <p>Click <code>Create Image</code>, then the image is queued to be uploaded, it may take some time and status of image is    changed from <code>Queued</code> to <code>Active</code>. </p> </li> </ul>"},{"location":"docs/compute/images/#list-images","title":"List Images","text":"<p>You can also view your available images (including custom ones):</p> CLIGUI <p>From the Alces Cloud login node, you can use the <code>openstack</code> command: <pre><code>usage: openstack image list [-h] [-f {csv,df-to-csv,json,table,value,yaml}] [-c COLUMN]\n                        [--format-config-file FORMAT_CONFIG]\n                        [--quote {all,minimal,none,nonnumeric}] [--noindent]\n                        [--max-width &lt;integer&gt;] [--fit-width] [--print-empty]\n                        [--sort-column SORT_COLUMN] [--sort-ascending | --sort-descending]\n                        [--public | --private | --community | --shared | --all]\n                        [--property &lt;key=value&gt;] [--name &lt;name&gt;]\n                        [--status &lt;status&gt;] [--member-status &lt;member-status&gt;]\n                        [--project &lt;project&gt;] [--project-domain &lt;project-domain&gt;]\n                        [--tag &lt;tag&gt;] [--hidden] [--long]\n                        [--sort &lt;key&gt;[:&lt;direction&gt;]] [--limit &lt;limit&gt;]\n                        [--marker &lt;marker&gt;]\n\n# For more information about the parameters, run command \"openstack image list --help\".\n</code></pre> To list images in Alces cloud, follow below example.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$  openstack image list\n+--------------------------------------+----------------------+--------+\n| ID                                   | Name                 | Status |\n+--------------------------------------+----------------------+--------+\n| b7e0d27f-1266-4069-a9b8-fb8a71f25421 | Rocky 9.3            | active |\n| 8711c1da-71f8-4c09-85bd-6efdc2346188 | Ubuntu 22.04.3 (LTS) | active |\n+--------------------------------------+----------------------+--------+\n</code></pre> <p>From the Alces Cloud dashboard, click <code>Compute</code> and then <code>Images</code>:</p> <p></p>"},{"location":"docs/compute/images/#update-images","title":"Update Images","text":"<p>You can update the image present in Alces cloud</p> CLIGUI <p>From the Alces Cloud login node, you can use the <code>openstack</code> command:</p> <pre><code>usage: openstack image set [-h] [--name &lt;name&gt;] [--min-disk &lt;disk-gb&gt;] [--min-ram &lt;ram-mb&gt;]\n                       [--container-format &lt;container-format&gt;] [--disk-format &lt;disk-format&gt;]\n                       [--protected | --unprotected] [--public | --private | --community | --shared]\n                       [--property &lt;key=value&gt;] [--tag &lt;tag&gt;] [--architecture &lt;architecture&gt;]\n                       [--instance-id &lt;instance-id&gt;] [--kernel-id &lt;kernel-id&gt;] [--os-distro &lt;os-distro&gt;]\n                       [--os-version &lt;os-version&gt;] [--ramdisk-id &lt;ramdisk-id&gt;] [--deactivate | --activate]\n                       [--project &lt;project&gt;] [--project-domain &lt;project-domain&gt;] [--accept | --reject | --pending]\n                       [--hidden | --unhidden]\n                       &lt;image&gt;\n# For more information about the parameters, run command \"openstack image delete --help\".\n</code></pre> <p>In current example, Image name is updated from <code>cirros</code> to <code>cirros-old</code>.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack image list\n+--------------------------------------+----------------------+--------+\n| ID                                   | Name                 | Status |\n+--------------------------------------+----------------------+--------+\n| b7e0d27f-1266-4069-a9b8-fb8a71f25421 | Rocky 9.3            | active |\n| 8711c1da-71f8-4c09-85bd-6efdc2346188 | Ubuntu 22.04.3 (LTS) | active |\n| 43c2618e-560e-4f33-8873-125f00e360ad | cirros               | active |\n+--------------------------------------+----------------------+--------+\n\n(openstack) [user@stack01[poc1] ~]$ openstack image set --name cirros  cirros-old\n\n(openstack) [user@stack01[poc1] ~]$ openstack image list\n+--------------------------------------+----------------------+--------+\n| ID                                   | Name                 | Status |\n+--------------------------------------+----------------------+--------+\n| b7e0d27f-1266-4069-a9b8-fb8a71f25421 | Rocky 9.3            | active |\n| 8711c1da-71f8-4c09-85bd-6efdc2346188 | Ubuntu 22.04.3 (LTS) | active |\n| 43c2618e-560e-4f33-8873-125f00e360ad | cirros-old           | active |\n+--------------------------------------+----------------------+--------+\n</code></pre> <p>Image deletion is a permanent operation and it cannot be reversed. Specific users with the appropriate permissions can delete images.</p> <ul> <li>From the Alces Cloud dashboard, click <code>Compute</code> and then <code>Images</code>:</li> <li>Select the image that you want to edit.</li> <li>In the Actions column, click the menu button and then select Edit Image from the list.</li> <li>In the Edit Image dialog box, you can perform various actions. For example:<ul> <li>Change the name of the image.</li> <li>Change the description of the image.</li> <li>Change the format of the image.</li> <li>Change the minimum disk of the image.</li> <li>Change the minimum RAM of the image.</li> <li>Select the <code>Public</code> button to make the image public.</li> <li>Clear the <code>Private</code> button to make the image private.</li> <li>Change the metadata of the image.</li> </ul> </li> <li>Click <code>Edit Image</code>.</li> </ul>"},{"location":"docs/compute/images/#delete-images","title":"Delete Images","text":"<p>You can delete the image from Alces cloud</p> CLIGUI <p>From the Alces Cloud login node, you can use the <code>openstack</code> command: <pre><code>usage: openstack image delete [-h] [--store &lt;STORE&gt;] &lt;image&gt; [&lt;image&gt; ...]\n\n# For more information about the parameters, run command \"openstack image delete --help\".\n</code></pre></p> <p>To delete cirros images from Alces cloud, follow below example. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack image list\n+--------------------------------------+----------------------+--------+\n| ID                                   | Name                 | Status |\n+--------------------------------------+----------------------+--------+\n| b7e0d27f-1266-4069-a9b8-fb8a71f25421 | Rocky 9.3            | active |\n| 8711c1da-71f8-4c09-85bd-6efdc2346188 | Ubuntu 22.04.3 (LTS) | active |\n| 5df0d202-c4c4-476c-ad04-cf7c41003df0 | cirros               | active |\n+--------------------------------------+----------------------+--------+\n(openstack) [user@stack01[poc1] ~]$ openstack image delete cirros\n</code></pre></p> <p>Image deletion is a permanent operation and it cannot be reversed. Specific users with the appropriate permissions can delete images.</p> <ul> <li>From the Alces Cloud dashboard, click <code>Compute</code> and then <code>Images</code>:</li> <li>Select the images that you want to delete.</li> <li>Click <code>Delete Images</code>.</li> <li>In the <code>Confirm Delete Images</code> dialog box, click <code>Delete Images</code> to confirm the deletion.</li> </ul>"},{"location":"docs/networking/networks/","title":"Networks","text":"<p>Alces Cloud provides you with the ability to create and manage your own private networks. This can be useful if you need to isolate an instances from other instances. Your project will come with a single network already configured, but additional networks can be created if required.</p> <p>Alces Cloud also provides an external network in order for you to access your instances. Instances cannot be connected directly to this network and instead floating IPs are allocated to your project and then associated to your instances.</p> <p>Info</p> <p>The Alces Cloud external network is limited to 30MB/s per instance when using a floating IP. Instances without floating IPs will share a combined 30MB/s limit.</p>"},{"location":"docs/networking/networks/#create-a-network","title":"Create a Network","text":"<p>Your project will come with a default network already setup and configured, however additional networks can be created if required.</p> CLIGUI <p>First create a new network with the desired name. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack network create mynetwork\n+---------------------------+--------------------------------------+\n| Field                     | Value                                |\n+---------------------------+--------------------------------------+\n| id                        | 8fb2fcd6-3f56-44db-86a9-c5ba4d10df47 |\n| name                      | mynetwork                            |\n| status                    | ACTIVE                               |\n+---------------------------+--------------------------------------+\n</code></pre></p> <p>Then create a subnet for the network with a suitable CIDR range. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack subnet create --network mynetwork --subnet-range 192.168.12.0/24 mysubnet\n+----------------------+--------------------------------------+\n| Field                | Value                                |\n+----------------------+--------------------------------------+\n| allocation_pools     | 192.168.12.2-192.168.12.254          |\n| cidr                 | 192.168.12.0/24                      |\n| gateway_ip           | 192.168.12.1                         |\n| name                 | mysubnet                             |\n+----------------------+--------------------------------------+\n</code></pre></p> <ol> <li>From the Alces Cloud dashboard, navigate to <code>Network</code> and then <code>Networks</code> on the left side bar.</li> <li>Click the <code>Create Network</code> button.</li> <li>Enter a network name, and then click <code>Next</code>.</li> <li>Enter a subnet name and then a suitable network address in CIDR format.</li> <li>Click <code>Next</code> and then <code>Create</code>.</li> </ol>"},{"location":"docs/networking/networks/#connect-a-network","title":"Connect a Network","text":"<p>In order for you to associate a floating IP with an instance, the network must be connected to a router than is also connected to the Alces Cloud external network.</p> CLIGUI <p>List the routers available to your project and make a note of the router you'd like to connect your network to. Your project will come with a default router already connected to the Alces Cloud external network for you to use.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack router list\n+--------------------------------------+-----------------+--------+-------+----------------------------------+\n| ID                                   | Name            | Status | State | Project                          |\n+--------------------------------------+-----------------+--------+-------+----------------------------------+\n| e543e469-791d-42cf-8f82-da384fc14348 | project-default | ACTIVE | UP    | a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6 |\n+--------------------------------------+-----------------+--------+-------+----------------------------------+\n</code></pre> <p>To connect the network to a router, you must connect the associated subnet. List the subnets associated with your network and make a note of the one you'd like to connect.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack subnet list --network mynetwork\n+--------------------------------------+----------+--------------------------------------+-----------------+\n| ID                                   | Name     | Network                              | Subnet          |\n+--------------------------------------+----------+--------------------------------------+-----------------+\n| c7bc6fb4-4a37-40f2-9cfe-03def6cce8ab | mysubnet | 8fb2fcd6-3f56-44db-86a9-c5ba4d10df47 | 192.168.12.0/24 |\n+--------------------------------------+----------+--------------------------------------+-----------------+\n</code></pre> <p>Connect the chosen subnet to the desired router.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack router add subnet myrouter mysubnet\n</code></pre> <ol> <li>From the Alces Cloud dashboard, navigate to <code>Network</code> and then <code>Routers</code>.</li> <li>Click on the router you wish to connect your network to.</li> <li>Click on the <code>interfaces</code> tab, and then the <code>Add Interface</code> button.</li> <li>Select the subnet associated with your network, and then click <code>Submit</code>.</li> </ol>"},{"location":"docs/networking/networks/#create-a-router","title":"Create a Router","text":"<p>Your project will come with a default router that is already connected to the Alces Cloud external network, however additional routers can be created if required.</p> CLIGUI <p>Create a new router with the desired name.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack router create myrouter\n+-------------------------+--------------------------------------+\n| Field                   | Value                                |\n+-------------------------+--------------------------------------+\n| id                      | 9d4588be-f5c7-4819-81a1-e347469ecb72 |\n| name                    | myrouter                             |\n| status                  | ACTIVE                               |\n+-------------------------+--------------------------------------+\n</code></pre> <p>Connect the router to the Alces Cloud external network if desired. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack router set myrouter --external-gateway external1\n</code></pre></p> <ol> <li>From the Alces Cloud dashboard, navigate to <code>Network</code> and then <code>Routers</code>.</li> <li>Click the <code>Create Router</code> button.</li> <li>Enter a router name and select the Alces Cloud external network.</li> <li>Click create router.</li> </ol> <p>Routers must be connected to the Alces Cloud external network in order to use floating IPs. Internal routers between your private networks can also be created if required by not selecting any external network.</p>"},{"location":"docs/networking/secgroups/","title":"Security Groups","text":"<p>Security Groups allow control over the traffic permitted to and from your instances on Alces Cloud. By default, your project will come with 3 example security groups to help get you started:</p> Name Description Ingress Egress default Default Security Group All from instances in default security group All to everywhere allow-ssh Allows SSH (22/tcp) access. SSH (22/tcp) from everywhere All to everywhere allow-https Allows HTTP (80/tcp) and HTTPS (443/tcp). HTTP(80/tcp) and HTTPS(443/tcp) from everywhere All to everywhere <p>Multiple security groups can be assigned to your instances at once. For example, to allow SSH and HTTP(S) access to your instance, you could stack the <code>allow-ssh</code> and <code>allow-https</code> security groups.</p> <p>It is not recommended to modify the default security groups, and instead create additional security groups where required.</p> <p>You can also view your available security groups from the command line. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack security group list\n+--------------------------------------+-------------+-------------------------------------------+----------------------------------+------+\n| ID                                   | Name        | Description                               | Project                          | Tags |\n+--------------------------------------+-------------+-------------------------------------------+----------------------------------+------+\n| a5c693ab-431c-4059-b0a2-e64e9636e51d | allow-https | Allows HTTP (80/tcp) and HTTPS (443/tcp). | 17234a6cc8954d748ed74a31680ea39b | []   |\n| cc99563e-1110-494b-8b3f-d411c8ece659 | allow-ssh   | Allows SSH (22/tcp) access.               | 17234a6cc8954d748ed74a31680ea39b | []   |\n| df9dc0fb-0d91-4e06-8aa5-477c6b1fe254 | default     | Default security group                    | 17234a6cc8954d748ed74a31680ea39b | []   |\n+--------------------------------------+-------------+-------------------------------------------+----------------------------------+------+\n</code></pre></p>"},{"location":"docs/networking/secgroups/#create-a-security-group","title":"Create a Security Group","text":"CLIGUI <p>Create a security group using the desired name. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack security group create mysecgroup\n+-----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Field           | Value                                                                                                                                                                           |\n+-----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| id              | a052ba9c-4808-420f-b3a5-6043205f66e2                                                                                                                                            |\n| name            | mysecgroup                                                                                                                                                                      |\n+-----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n</code></pre></p> <ol> <li>From the Alces Cloud dashboard, navigate to Network and then <code>Security Groups</code> on the left side bar.</li> <li>Click the <code>Create Security Group</code> button.</li> <li>Give the security group a name and an optional description.</li> <li>Click <code>Create Security Group</code>.</li> </ol> <p>By default, every security group will be created with two existing rules permitting all outbound traffic.</p>"},{"location":"docs/networking/secgroups/#add-security-group-rules","title":"Add Security Group Rules","text":"CLIGUI <p>Create the desired rules on your security group. Further information on these parameters can be found here.</p> <p>In this example, we create a rule to permit all TCP traffic to port 22.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack security group rule create --ingress --remote-ip 0.0.0.0/0 --protocol tcp --dst-port 22 mysecgroup\n+-------------------------+--------------------------------------+\n| Field                   | Value                                |\n+-------------------------+--------------------------------------+\n| direction               | ingress                              |\n| port_range_max          | 22                                   |\n| port_range_min          | 22                                   |\n| protocol                | tcp                                  |\n| remote_ip_prefix        | 0.0.0.0/0                            |\n+-------------------------+--------------------------------------+\n</code></pre> <ol> <li>From the Alces Cloud dashboard, navigate to Network and then <code>Security Groups</code> on the left side bar.</li> <li>Click <code>Manage Rules</code> on the desired security group.</li> <li>Click the <code>Add Rule</code> button.</li> <li>Configure the desired rule. For example, select the SSH rule and configure a CIDR of 0.0.0.0/0 to allow all SSH traffic on port 22.</li> <li>Click the <code>Add</code> button.</li> </ol> <p>Further information on creating security groups can be found here.</p>"},{"location":"docs/networking/subnets/","title":"Subnets","text":"<p>Here is some info about subnets</p>"},{"location":"docs/policy/tos/","title":"Alces Cloud - Terms of Service","text":""},{"location":"docs/policy/tos/#1-acceptance-of-terms","title":"1. Acceptance of Terms","text":"<p>By accessing or using Alces Cloud services, you agree to comply with and be bound by these Terms of Service.</p>"},{"location":"docs/policy/tos/#2-acceptable-use","title":"2. Acceptable Use","text":"<p>You agree not to use Alces Cloud services for any illegal or unauthorized purpose. You may not use the services in any manner that could damage, disable, overburden, or impair our infrastructure.</p>"},{"location":"docs/policy/tos/#3-service-availability","title":"3. Service Availability","text":"<p>We strive to provide reliable and uninterrupted access to Alces Cloud. However, we do not guarantee that the services will be available at all times, and we reserve the right to suspend or terminate services for maintenance or other reasons.</p>"},{"location":"docs/policy/tos/#4-termination","title":"4. Termination","text":"<p>We reserve the right to terminate or suspend your access to Alces Cloud services at our sole discretion, without prior notice, for any reason, including, but not limited to, violation of these Terms of Service.</p>"},{"location":"docs/policy/tos/#5-changes-to-terms","title":"5. Changes to Terms","text":"<p>We reserve the right to update or modify these Terms of Service at any time. We will notify users of any material changes, and continued use of the services after such changes constitutes acceptance of the revised terms.</p> <p>By using Alces Cloud services, you acknowledge that you have read, understood, and agreed to these Terms of Service.</p>"},{"location":"docs/policy/usage/","title":"Alces Cloud - Usage Policies","text":""},{"location":"docs/policy/usage/#1-instance-uptime","title":"1. Instance Uptime","text":"<p>Alces Cloud enforces a maximum runtime of 30 days for any instances</p> <p>By using Alces Cloud services, you acknowledge that you have read, understood, and agreed to these Usage Policies.</p>"},{"location":"docs/quotas/overview/","title":"Quotas","text":""},{"location":"docs/quotas/overview/#checking-your-current-quota","title":"Checking your current Quota","text":"<p>Each project is assigned a quota that defines how much of each resource a project can use. For each resource consuming operation (such as creating an instance), the request is checked against your maximum permitted quota.</p> <p>Your project quota and usage can be checked using:</p> CLIGUI <p>To view your current quota and usage:</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack quota show --usage\n+----------------------+--------+--------+----------+\n| Resource             |  Limit | In Use | Reserved |\n+----------------------+--------+--------+----------+\n| cores                |     48 |     42 |        0 |\n| instances            |      8 |      7 |        0 |\n| ram                  | 393216 | 344064 |        0 |\n| volumes              |      8 |      8 |        0 |\n| snapshots            |     10 |      0 |        0 |\n| gigabytes            |   1000 |    800 |        0 |\n| backups              |     10 |      0 |        0 |\n| volumes_hdd.1        |     -1 |      8 |        0 |\n| gigabytes_hdd.1      |     -1 |    800 |        0 |\n| snapshots_hdd.1      |     -1 |      0 |        0 |\n| volumes_default      |     -1 |      0 |        0 |\n| gigabytes_default    |     -1 |      0 |        0 |\n| snapshots_default    |     -1 |      0 |        0 |\n| groups               |     10 |      0 |        0 |\n| networks             |      3 |      1 |        0 |\n| ports                |     30 |     10 |        0 |\n| rbac_policies        |     10 |      0 |        0 |\n| routers              |     10 |      1 |        0 |\n| subnets              |      5 |      1 |        0 |\n| subnet_pools         |     -1 |      0 |        0 |\n| fixed-ips            |     -1 |      0 |        0 |\n| injected-file-size   |  10240 |      0 |        0 |\n| injected-path-size   |    255 |      0 |        0 |\n| injected-files       |      5 |      0 |        0 |\n| key-pairs            |     20 |      0 |        0 |\n| properties           |    128 |      0 |        0 |\n| server-groups        |     10 |      0 |        0 |\n| server-group-members |     10 |      0 |        0 |\n| floating-ips         |      8 |      8 |        0 |\n| secgroup-rules       |    100 |      8 |        0 |\n| secgroups            |     10 |      3 |        0 |\n| backup-gigabytes     |   1000 |      0 |        0 |\n| per-volume-gigabytes |     -1 |      0 |        0 |\n+----------------------+--------+--------+----------+\n</code></pre> <p>You can also view some of the key quotas from the Alces Cloud dashboard overview page.</p> <p></p>"},{"location":"docs/quotas/overview/#image-quotas","title":"Image Quotas","text":"<p>Your project also has some additional image quotas limiting the amount and size of images you are allowed to upload.</p> Limit Quota Total Images 10 Maximum Image Size 100GB Total Image Storage 250GB Maximum Parallel Uploads 3"},{"location":"docs/starter/","title":"Getting Started","text":"<p>This guide will help you to get started with using Alces Cloud and step through creating your first instance.</p>"},{"location":"docs/starter/#prerequisites","title":"Prerequisites","text":"<p>Before you begin make sure that you:</p> <ul> <li>Have access to a machine running Linux, Windows or MacOS</li> <li>Have received your login credentials from Alces Flight</li> </ul> <p>Select your Operating System Linux Windows MacOS</p>"},{"location":"docs/starter/access-linux/","title":"Accessing Alces Cloud - Linux/MacOS","text":"<p>This documentation provides guidance on how to access Alces Cloud, currently there are two routes to accessing Alces Cloud depending on your usage preferences. Users wishing to access the Alces Cloud via the command line should follow instructions under the \"CLI\" tab and users wishing to access the Alces Cloud via a GUI (Openstack Horizon Dashboard) should follow instructions under the \"GUI\" tab.</p>"},{"location":"docs/starter/access-linux/#first-time-login","title":"First Time Login","text":"<p>All new users will be required to update their initial password before using the service.</p> <p>From a command line : <pre><code>[user@fedora ~]$ ssh myuser@se1.alces.network\n</code></pre> This will then prompt for your password (as provided in your onboarding email) and your \"Verification Code\" (your MFA code from your TOTP authentication app). Once you have correctly provided these, the \"login node\" will prompt you to update your initial password.</p> <p>With your password configured, you are now able to access the Alces Cloud service via the following methods:</p> CLIGUI <p>The Alces Cloud service provides an interactive login node for users who prefer to use the command line instead of the dashboard to manage their instances.</p> <p>From a command line: <pre><code>[user@fedora ~]$ ssh myuser@se1.alces.network\n(myuser@se1.alces.network) Password:\n(myuser@se1.alces.network Verification code:\nLast login: Thu Jan 25 15:33:51 2024 from 213.83.69.6\n-[ alces flight ]-\nWelcome to poc1, based on Rocky Linux 9.2.\n</code></pre></p> <p>Once connected to the interactive login node (<code>stack01</code>) you will able to use the Openstack CLI using our supported version of the CLI.</p> <p>Once you are logged in, an <code>openrc</code> file will be available in your home directory that will setup the required authentication for your SSH session. Source the file and enter your password and a valid token from your authenticator app. For security, this is only valid for 24 hours and does not persist after you disconnect from your SSH session.</p> <pre><code>(openstack) [myuser@stack01[poc1] ~]$ source openrc\nPlease enter your password:\nPasscode:\n(openstack) [myuser@stack01[poc1] ~]$ openstack network list\n+--------------------------------------+-----------+--------------------------------------+\n| ID                                   | Name      | Subnets                              |\n+--------------------------------------+-----------+--------------------------------------+\n| c681d94b-e2ec-4b73-89bf-9943bcce3255 | external1 | 8a1961f9-030c-419e-9bf0-66875031073f |\n| d5732f52-84ed-4a9f-a73e-11a2938ac7c2 | default   | dc7f9f3f-61d7-44a0-b1ef-db3a554a461f |\n+--------------------------------------+-----------+--------------------------------------+\n</code></pre> <p>For users wishing to access Alces Cloud via a GUI (using Openstack Horizon), users must first connect to the Alces Cloud VPN service.</p>"},{"location":"docs/starter/access-linux/#secure-vpn","title":"Secure VPN","text":"<p>To connect to this, SSH to the login node as above and copy the <code>cloudvpn.conf</code> file available in your home directory to your local machine. This can be done using the <code>scp</code> command.</p> <pre><code>[user@fedora ~]$ scp myuser@se1.alces.network:~/cloudvpn.conf ~/\n(myuser@se1.alces.network) Password:\n(myuser@se1.alces.network) Verification code:\n</code></pre> <p>Once this has been copied to your local machine, use a suitable VPN client to connect to the service. This can be done using the <code>openvpn</code> command on most Linux systems:</p> <pre><code>[user@fedora ~]$ sudo openvpn --config cloudvpn.conf\nEnter Auth Username: myuser\nEnter Auth Password:\nCHALLENGE: Enter 2FA Authenticator code:\n</code></pre>"},{"location":"docs/starter/access-linux/#using-the-dashboard","title":"Using the Dashboard","text":"<p>Once connected to the secure VPN, you will be able to access the Alces Cloud Dashboard on a browser. This will take you to a login page and enter your username and password.</p> <p></p> <p>Once you have logged in successfully, you'll be presented with the overview screen.</p> <p></p>"},{"location":"docs/starter/access-windows/","title":"Accessing Alces Cloud - Windows","text":"<p>This documentation provides guidance on how to access Alces Cloud, currently there are two routes to accessing Alces Cloud depending on your usage preferences. Users wishing to access the Alces Cloud via the command line should follow instructions under the \"CLI\" tab and users wishing to access the Alces Cloud via a GUI (Openstack Horizon Dashboard) should follow instructions under the \"GUI\" tab.</p>"},{"location":"docs/starter/access-windows/#first-time-login","title":"First Time Login","text":"<p>All new users will be required to update their initial password before using the service.</p> <p>From your installed terminal such as putty, console emulator, etc, all new users will be required to update their initial password before using the service.</p> <p></p> <p>This will then prompt for your password (as provided in your onboarding email) and your \"Verification Code\" (your MFA code from your TOTP authentication app). Once you have correctly provided these, the \"login node\" will prompt you to update your initial password.</p> <p>With your password configured, you are now able to access the Alces Cloud service via the following methods:</p> CLIGUI <p>The Alces Cloud service provides an interactive login node for users who prefer to use the command line instead of the dashboard to manage their instances.</p> <p></p> <p>Once connected to the interactive login node (<code>stack01</code>) you will able to use the Openstack CLI using our supported version of the CLI.</p> <p>Once you are logged in, an <code>openrc</code> file will be available in your home directory that will setup the required authentication for your SSH session. Source the file and enter your password and a valid token from your authenticator app.</p> <p>For security, this is only valid for 24 hours and does not persist after you disconnect from your SSH session.</p> <p></p> <p>For users wishing to access Alces Cloud via a GUI (using Openstack Horizon) then we provide a secure VPN in order for you to access this service.</p>"},{"location":"docs/starter/access-windows/#secure-vpn","title":"Secure VPN","text":"<p>To connect to this, SSH to the login node as above and copy the <code>cloudvpn.conf</code> file available in your home directory to your local machine. This can be done using the <code>scp</code> command.</p> <p></p> <p>If you then check your Downloads you should see the CONF file which you will need to import into a suitable VPN Client.</p> <p></p> <p>Once this has been copied to your local machine, use a suitable VPN client to connect to the service. This can be done using the OpenVPN client application, where you will need to move the CONF file into your config and change to a .ovpn.</p> <p></p> <p>Then check your OpenVPN client where you should see 'cloudvpn' as an option.</p> <p></p> <p>To connect through you will then need to use your username, password and your 2FA authenticator code.</p>"},{"location":"docs/starter/access-windows/#using-the-dashboard","title":"Using the Dashboard","text":"<p>Once connected to the secure VPN, you will be able to access the Alces Cloud Dashboard on a browser. This will take you to a login page and enter your username and password.</p> <p></p> <p>Once you have logged in successfully, you'll be presented with the overview screen.</p> <p></p>"},{"location":"docs/starter/instance/","title":"Creating your first Instance","text":""},{"location":"docs/starter/instance/#launching-an-instance","title":"Launching an Instance","text":"<p>With access to Alces Cloud sorted - let's get started launching some instances!</p> CLIGUI <p>To launch an instance from the command line, you will first need to identify which image you wish to use. Make a note of the relevant ID to use later on. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ openstack image list\n+--------------------------------------+----------------------+--------+\n| ID                                   | Name                 | Status |\n+--------------------------------------+----------------------+--------+\n| b7e0d27f-1266-4069-a9b8-fb8a71f25421 | Rocky 9.3            | active |\n| 8711c1da-71f8-4c09-85bd-6efdc2346188 | Ubuntu 22.04.3 (LTS) | active |\n+--------------------------------------+----------------------+--------+\n</code></pre></p> <p>Identify the flavor you wish to use and make a note of the name. More information on the available flavors can be found here. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ openstack flavor list\n+--------------------------------------+---------------------------------+-------+------+-----------+-------+-----------+\n| ID                                   | Name                            |   RAM | Disk | Ephemeral | VCPUs | Is Public |\n+--------------------------------------+---------------------------------+-------+------+-----------+-------+-----------+\n| 26b933e3-4fde-4e10-9556-16b2e470cadf | c1.small                        | 49152 |  150 |       700 |     6 | False     |\n| d538bd2d-10ce-4555-8d1d-46535ee815ee | c1.large                        | 98304 |  300 |      1400 |    12 | False     |\n+--------------------------------------+---------------------------------+-------+------+-----------+-------+-----------+ \n</code></pre></p> <p>Identify the network to attach your instance to and make a note of the name. Your project will come with a default network already configured for you to use. More information on networks can be found here. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ openstack network list --internal\n+--------------------------------------+---------------------+--------------------------------------+\n| ID                                   | Name                | Subnets                              |\n+--------------------------------------+---------------------+--------------------------------------+\n| cff8f325-db1b-4812-974a-9bee346a84bd | my-project--default | 920ba89b-4f27-4c35-8862-9d457bc6a677 |\n+--------------------------------------+---------------------+--------------------------------------+\n</code></pre></p> <p>Identify the key pair you will use to access the instance and make a note of the name. For more information on creating a key pair, see  Creating an SSH Key. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ openstack keypair list\n+-----------+-------------------------------------------------+------+\n| Name      | Fingerprint                                     | Type |\n+-----------+-------------------------------------------------+------+\n| mykeypair | a1:b2:c3:d4:e5:f6:g7:h8:i9:j0:k1:l2:m3:n4:o5:p6 | ssh  |\n+-----------+-------------------------------------------------+------+\n</code></pre></p> <p>Launch your instance using the image ID, and flavor, network and key pair name previously selected. As there are quite a few parameters, we've put a description of each below. <pre><code>openstack server create\n--flavor: The name or ID of the flavor you wish to use.\n--image: The name of ID of the image you wish to use.\n--boot-from-volume: The size disk you wish to create for the instance.\n--network: The name or ID of the network to attach the instance to.\n--key-name: The name of the key pair you wish to use to connect to the instance.\n--security-group: The name or ID of the security group to assign to this instance (repeat option to set multiple groups).\n--wait: Wait for the instance to be in the `ACTIVE` state.\n&lt;name&gt;: The name of your instance.\n</code></pre></p> <p>In our example, we use the following command to create our instance and assign the default security groups in order to allow SSH access. The command may take a few minutes to run, and will return a table with your instance details once it has been created. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ openstack server create --flavor c1.small --image b7e0d27f-1266-4069-a9b8-fb8a71f25421 --boot-from-volume 100 --network my-project-default --key-name mykeypair --security-group default --security-group allow-ssh --wait myinstance\n+-----------------------------+----------------------------------------------------------+\n| Field                       | Value                                                    |\n+-----------------------------+----------------------------------------------------------+\n| flavor                      | c1.small (26b933e3-4fde-4e10-9556-16b2e470cadf)          |\n| name                        | myinstance                                               |\n| status                      | ACTIVE                                                   |\n+-----------------------------+----------------------------------------------------------+\n</code></pre></p> <p>In order to connect to your instance, you will now need to associate a floating IP with the instance. First, allocate a new floating IP to your project and make a note of the ID. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ openstack floating ip create external1\n+---------------------+--------------------------------------+\n| Field               | Value                                |\n+---------------------+--------------------------------------+\n| floating_ip_address | 10.199.31.8                          |\n| id                  | 9968df09-178d-48d5-a6b9-f82e996a2f4a |\n+---------------------+--------------------------------------+\n</code></pre></p> <p>Assign this floating IP to your instance. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ openstack server add floating ip myinstance 9968df09-178d-48d5-a6b9-f82e996a2f4a\n</code></pre></p> <p>You should now be able to SSH to your instance using this floating IP and the SSH key created earlier. Different images may require you to login as a different user - more information on the standard Alces images can be found here.</p> <p>You may also be asked to accept the instance host key the first time you connect to a new instance. Type <code>yes</code> here to continue. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ ssh -i ~/.ssh/mykeypair rocky@10.199.31.8\nThe authenticity of host '10.199.31.8 (10.199.31.8)' can't be established.\nED25519 key fingerprint is SHA256:87OxF7SkU/D6jXbY9XmwElnME9fK6qUaBVlTDlbVnDQ.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.199.31.8' (ED25519) to the list of known hosts.\n[rocky@myinstance ~]$\n</code></pre></p> <p>To launch your first instance on Alces Cloud you can utilise the Launch Instance wizard.</p> <p>On the left side bar, navigate to <code>Compute</code> and then <code>Instances</code>. On the top right, click <code>Launch Instance</code> to open the wizard. Choose a suitable name for your instance, then then click <code>Next</code>.</p> <p></p> <p>Choose an image from the available list by pressing the up arrow next to the desired image, as well as a suitable volume size. Note: different images may have different requirements - you can view these by pressing the arrow to the left of the image name. Click <code>Next</code>.</p> <p></p> <p>Choose the flavor size for your instance. More information on the available flavors can be found here. Click <code>Next</code>.</p> <p></p> <p>Choose the network to attach your instance to. Your project will come with a default network already configured for you to use. More information on networks can be found here.</p> <p>Ensure the <code>default</code> network is selected and then click <code>Next</code> twice to move to the <code>Security Group</code> section.</p> <p></p> <p>Choose the security groups to apply to your instance. Your project will come with 3 security groups by default. More information on security groups can be found here.</p> <p>Select the <code>default</code> and <code>allow-ssh</code> security groups by pressing the up arrow next to these, then click <code>Next</code>.</p> <p></p> <p>Ensure the key pair you created earlier is selected, and then click on <code>Launch Instance</code> to launch it.</p> <p></p> <p>Launching your instance may take a few moments, after which it will be shown in the <code>Running</code> state on your <code>Instances</code> page.</p> <p>In order to connect to your instance, you will need to associate a floating IP with the instance. Click the drop down arrow to the right of your instance and then select <code>Associate Floating IP</code>.</p> <p></p> <p>To allocate a new floating IP to your project, press the <code>+</code> button and then <code>Allocate IP</code>.</p> <p></p> <p>Ensure the IP that was just allocated is selected, and then select your instance from the drop down menu. Click <code>Associate</code> to then associate the IP.</p> <p></p> <p>You should now be able to SSH to your instance using this floating IP and the <code>.pem</code> file downloaded earlier. This can be done using the <code>ssh</code> command on most Linux systems. Different images may require you to login as a different user - more information on the standard Alces images can be found here.</p>"},{"location":"docs/starter/instance/#various-operation-on-instance","title":"Various Operation on Instance","text":"<p>A user can observe various operation on instance like stop, start, pause, suspend, reboot, shutdown etc.</p> CLIGUI Operation Description Command Stop an instance Stops the instance. <code>openstack server stop &lt;server_uuid/name&gt;</code> Start an instance Starts a stopped instance. <code>openstack server start &lt;server_uuid/name&gt;</code> Pause a running instance Immediately pause a running instance, storing its state in memory (RAM) in a frozen state. No confirmation is needed. <code>openstack server pause &lt;server_uuid/name&gt;</code> Resume a paused instance Immediately resumes a paused instance. No confirmation is needed. <code>openstack server unpause &lt;server_uuid/name&gt;</code> Suspend a running instance Immediately suspends a running instance, storing its state on the instance disk. No confirmation is needed. <code>openstack server suspend &lt;server_uuid/name&gt;</code> Resume a suspended instance Immediately resumes a suspended instance. No confirmation is needed. <code>openstack server resume  &lt;server_uuid/name&gt;</code> Delete an instance Permanently destroys the instance. No confirmation is needed. <code>openstack server delete  &lt;server_uuid/name&gt;</code> Edit instance metadata Use instance metadata to specify instance properties. <code>openstack server set --property &lt;key=value&gt; [--property &lt;key=value&gt;]   &lt;server_uuid/name&gt;</code> Add security groups Adds specified security groups to the instance. <code>openstack server add security group &lt;server_uuid/name&gt;</code> Remove security groups Removes specified security groups from the instance. <code>openstack remove security group &lt;server_uuid/name&gt;</code> Rescue an instance Puts an instance in rescue mode, allowing system repair and data recovery. <code>openstack server rescue &lt;server_uuid/name&gt;</code> Restore a rescued instance Reboots the rescued instance. <code>openstack server unrescue &lt;server_uuid/name&gt;</code> View instance logs Displays the most recent section of the instance console log. <code>openstack console log show &lt;server_uuid/name&gt;</code> Shelve an instance Retains instance data and resource allocations, but clears instance memory. Shelved instances are moved to SHELVED_OFFLOADED state. No confirmation is needed. <code>openstack server shelve &lt;server_uuid/name&gt;</code> Unshelve an instance Restores the instance using the shelved instance's disk image. <code>openstack server unshelve &lt;server_uuid/name&gt;</code> Lock an instance Prevents non-admin users from executing actions on the instance. <code>openstack server lock &lt;server_uuid/name&gt;</code> Unlock an instance Unlocks a previously locked instance. <code>openstack server unlock &lt;server_uuid/name&gt;</code> Soft reboot an instance Gracefully stops and restarts the instance. <code>openstack server reboot --soft  &lt;server_uuid/name&gt;</code> Hard reboot an instance Stops and restarts the instance by shutting down its power. <code>openstack server reboot --hard  &lt;server_uuid/name&gt;</code> Rebuild an instance Rebuilds the instance using new image and disk-partition options. Useful for OS issues. <code>openstack server rebuild &lt;server_uuid/name&gt;</code> <ul> <li>From the Alces Cloud dashboard, click <code>Compute</code> and then <code>Instances</code>:</li> <li>Click on the dropdown menu within the \"Actions\" column corresponding to the specific instance requiring the operation.</li> </ul> <p></p>"},{"location":"docs/starter/instance/#resizing-an-instance","title":"Resizing an instance","text":"<p>If you wanted to increase or decrease the memory or CPU count of the instance you can use resize operation. While resizing the instance, select the new flavor for instance that matches the requirement. Resize will perform rebuild and restart of the instance.</p> <p>Note</p> <p>To resize an instance you will need sufficient quota and resource. Existing usage is not released until after the resize is complete. Resizing an instance with local root or ephemeral storage will also take considerable time and is not recommended.</p> CLIGUI <ul> <li> <p>Fetch the name and ID of instances. <pre><code>openstack server list\n</code></pre></p> </li> <li> <p>Fetch the name and ID of flavors. <pre><code>openstack flavor list\n</code></pre></p> </li> <li>Resize the instance. <pre><code>openstack server resize --flavor &lt;flavor_name_or_id&gt; --wait &lt;instance_name_or_id&gt;\n</code></pre></li> </ul> <p>Note</p> <p>Restarting of instance may some time, instance is first powered off and then resize take place. During this time status of instance is <code>RESIZE</code>.</p> <pre><code>openstack server list\n+----------------------+----------------+--------+------------------------------------+\n| ID                   | Name           | Status | Networks                           |\n+----------------------+----------------+--------+------------------------------------+\n| 67bc9a9a-5928-47c... | myCirrosServer | RESIZE | admin_internal_net=192.168.111.139 |\n+----------------------+----------------+--------+------------------------------------+\n</code></pre> <ul> <li>When resize is complete, the status of instance will be changed to <code>VERIFY_RESIZE</code>, you can confirm or revert the resize.<ul> <li>Confirm the resize. <pre><code>openstack server resize confirm &lt;instance_name_or_id&gt;\n</code></pre></li> <li>Revert the resize. <pre><code>openstack server resize revert &lt;instance_name_or_id&gt;\n</code></pre></li> </ul> </li> </ul> <p>In the alces cloud we can perform resize of the instance by following the example below <pre><code># Fetch all the instances\n(openstack) [myuser@stack01[poc1] ~]$ openstack server list\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n| ID                                   | Name     | Status | Networks                          | Image                    | Flavor   |\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n| 7d611d7a-0595-4c4e-86e4-d536... | cirrosvm | ACTIVE | alces-testing-default=172.16.0.66 | N/A (booted from volume) | c1.small |\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n\n# Fetch all the flavors \n(openstack) [myuser@stack01[poc1] ~]$ openstack flavor list\n+--------------------------------------+----------+-------+------+-----------+-------+-----------+\n| ID                                   | Name     |   RAM | Disk | Ephemeral | VCPUs | Is Public |\n+--------------------------------------+----------+-------+------+-----------+-------+-----------+\n| 26b933e3-4fde-4e10-9556-16b2e... | c1.small | 49152 |  150 |       700 |     6 | False     |\n| d538bd2d-10ce-4555-8d1d-46535... | c1.large | 98304 |  300 |      1400 |    12 | False     |\n+--------------------------------------+----------+-------+------+-----------+-------+-----------+\n\n# Now pass the instance ID that we wanted to resize and then select the flavor that we want for our instance, here cirrosvm is selected \n# to get resized from c1.small to c1.large.\n(openstack) [myuser@stack01[poc1] ~]$  openstack server resize --flavor d538bd2d-10ce-4555-8d1d-46535... --wait 7d611d7a-0595-4c4e-86e4-d536...\n\n# Now the cirrosvm status is changed to RESIZE from ACTIVE.\n(openstack) [myuser@stack01[poc1] ~]$ openstack server list\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n| ID                                   | Name     | Status | Networks                          | Image                    | Flavor   |\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n| 7d611d7a-0595-4c4e-86e4-d536... | cirrosvm | RESIZE | alces-testing-default=172.16.0.66 | N/A (booted from volume) | c1.small |\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n\n# When the resize is complete then status of cirrosvm is changed to VERIFY_RESIZE, next step is to approve/cancel the resize.\n(openstack) [myuser@stack01[poc1] ~]$ openstack server list\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+-----------------+\n| ID                                   | Name     | Status | Networks                          | Image                    | Flavor          |\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+-----------------+\n| 7d611d7a-0595-4c4e-86e4-d536... | cirrosvm | VERIFY_RESIZE | alces-testing-default=172.16.0.66 | N/A (booted from volume) | c1.small |\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+-----------------+\n\n# Resize of cirrosvm is approved, then status is changed from VERIFY_RESIZE to ACTIVE\nopenstack server resize confirm 7d611d7a-0595-4c4e-86e4-d536...\n\n(openstack) [myuser@stack01[poc1] ~]$ openstack server list\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n| ID                                   | Name     | Status | Networks                          | Image                    | Flavor   |\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n| 7d611d7a-0595-4c4e-86e4-d536... | cirrosvm | ACTIVE | alces-testing-default=172.16.0.66 | N/A (booted from volume) | c1.large |\n+--------------------------------------+----------+--------+-----------------------------------+--------------------------+----------+\n</code></pre></p> <ul> <li>From the Alces Cloud dashboard, click <code>Compute</code> and then <code>Instances</code>:</li> <li> <p>Click on the dropdown menu within the \"Actions\" column then click on <code>Resize Instance</code>.</p> <p></p> </li> <li> <p>Choose a new flavor and click on the \u201cResize\u201d button.</p> <p></p> </li> <li> <p>Resizing will require some time to process, and once completed, you will be prompted for approval or to revert the changes. Simply click \"Approve\" to confirm the resizing, or select \"Revert\" from the dropdown menu if you wish to undo the changes.</p> <p></p> </li> </ul>"},{"location":"docs/starter/instance/#create-an-instance-snapshot","title":"Create an instance snapshot","text":"<p>Instance snapshot is a image that captures the state of the running instance disk. You can take snapshot of an instance and store it as a image, further that image can be used as a template to create new instances. Snapshots enable us to create new instances from another instances. If we wanted to preserve the state of instance for later use snapshot is good option to use.</p> CLIGUI <ul> <li>Scan all the servers and choose either the UUID or the name of the instance for which you intend to create a snapshot.     <pre><code>openstack server list\n</code></pre></li> <li>Create snapshot of the instance using below command, replace  with a name for the new snapshot image and replace  with the name or ID of the instance that you want to create the snapshot from.     <pre><code>openstack server image create --name &lt;image_name&gt; &lt;instance_name_or_uuid&gt;\n</code></pre> <p>In the below example we are creating snapshot with name <code>alces-docs-snap</code> of the instance names <code>alces-docs</code>.</p> <p>Fetch all the instances and image in the Alces cloud. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack server list\n+--------------------------------------+------------+--------+-------------------------------------------------+--------------------------+-----------+\n| ID                                   | Name       | Status | Networks                                        | Image                    | Flavor    |\n+--------------------------------------+------------+--------+-------------------------------------------------+--------------------------+-----------+\n| ea89d5b1-52c3-4d52-b6e4-1fc288947... | alces-docs | ACTIVE | engineering-default=10.151.17.115, 172.16.0.182 | N/A (booted from volume) | m1.medium |\n+--------------------------------------+------------+--------+-------------------------------------------------+--------------------------+-----------+\n\n(openstack) [user@stack01[poc1] ~]$ openstack image list\n+--------------------------------------+--------------------+--------+\n| ID                                   | Name               | Status |\n+--------------------------------------+--------------------+--------+\n| 804716e7-257d-4975-8ae5-bead93a2e... | CirrOS             | active |\n| 8fdd6edc-e876-4a7c-b623-37d6555d0... | Flight Solo 2024.1 | active |\n| 15c14506-11e7-4294-af5e-abff71f63... | Rocky 9.3          | active |\n+--------------------------------------+--------------------+--------+\n</code></pre></p> <p>Now Creating Snapshot of instance <code>alces-docs</code> with name <code>alces-docs-snap</code>. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack server image create --name alces-docs-snap alces-docs\n+------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Field            | Value                                                                                                                                                                                           |\n+------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| checksum         | d41d8cd98f00b204e9800998ecf84...                                                                                                                                                                |\n| container_format | bare                                                                                                                                                                                            |\n| created_at       | 2024-03-19T09:49:54Z                                                                                                                                                                            |\n| disk_format      | raw                                                                                                                                                                                             |\n| file             | /v2/images/45ebfe87-9920-40c1-8177-54ecd7692.../file                                                                                                                                            |\n| id               | 45ebfe87-9920-40c1-8177-54ecd7692...                                                                                                                                                            |\n| min_disk         | 10                                                                                                                                                                                              |\n| min_ram          | 0                                                                                                                                                                                               |\n| name             | alces-docs-snap                                                                                                                                                                                 |\n| owner            | ce5b5d47a47348d59dd3bdcd21267...                                                                                                                                                                |\n| properties       | base_image_ref='', bdm_v2='True', block_device_mapping='[{\"tag\": null, \"encryption_format\": null, \"image_id\": null, \"volume_id\": null, \"device_type\": \"disk\", \"destination_type\": \"volume\",     |\n|                  | \"volume_type\": null, \"device_name\": \"/dev/vda\", \"volume_size\": 10, \"encryption_options\": null, \"no_device\": null, \"source_type\": \"snapshot\", \"boot_index\": 0, \"guest_format\": null,             |\n|                  | \"encryption_secret_uuid\": null, \"delete_on_termination\": true, \"snapshot_id\": \"215bf45f-26c6-4516-8d99-4586dacfd9c1\", \"encrypted\": null, \"disk_bus\": \"virtio\"}]', boot_roles='member,reader',   |\n|                  | direct_url='rbd://e4f759f8-da56-11ee-a031-525400dffa1c/hdd/45ebfe87-9920-40c1-8177-54ecd7692.../snap', hw_cdrom_bus='ide', hw_disk_bus='virtio', hw_input_bus='usb', hw_machine_type='pc',      |\n|                  | hw_pointer_model='usbtablet', hw_video_model='virtio', hw_vif_model='virtio', os_hash_algo='sha512',                                                                                            |\n|                  | os_hash_value='cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e', os_hidden='False',                            |\n|                  | owner_project_name='engineering', owner_specified.openstack.md5='', owner_specified.openstack.object='images/Rocky 9.3', owner_specified.openstack.sha256='', owner_user_name='shubham.dang',   |\n|                  | root_device_name='/dev/vda', stores='rbd'                                                                                                                                                       |\n| protected        | False                                                                                                                                                                                           |\n| schema           | /v2/schemas/image                                                                                                                                                                               |\n| size             | 0                                                                                                                                                                                               |\n| status           | active                                                                                                                                                                                          |\n| tags             |                                                                                                                                                                                                 |\n| updated_at       | 2024-03-19T09:49:55Z                                                                                                                                                                            |\n| visibility       | private                                                                                                                                                                                         |\n+------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n</code></pre></p> <p>Now we can verifying the snapshot <code>alces-docs-snap</code> in image list, later this image will be used to create instances. <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack image list\n+--------------------------------------+--------------------+--------+\n| ID                                   | Name               | Status |\n+--------------------------------------+--------------------+--------+\n| 804716e7-257d-4975-8ae5-bead93a2e... | CirrOS             | active |\n| 8fdd6edc-e876-4a7c-b623-37d6555d0... | Flight Solo 2024.1 | active |\n| 15c14506-11e7-4294-af5e-abff71f63... | Rocky 9.3          | active |\n| 45ebfe87-9920-40c1-8177-54ecd7692... | alces-docs-snap    | active |\n+--------------------------------------+--------------------+--------+\n</code></pre></p> <ul> <li>From the Alces Cloud dashboard, click <code>Compute</code> and then <code>Instances</code>:</li> <li> <p>Click on the dropdown menu within the \"Actions\" column then click on <code>Create Snapshot</code>.</p> <p></p> </li> <li> <p>Enter the Snapshot Name and click on the <code>Create Snapshot</code> button.</p> <p></p> </li> <li> <p>Snapshot Creation will take some time, In order to check image click <code>Compute</code> and then <code>Images</code>.</p> <p></p> </li> </ul>"},{"location":"docs/starter/key/","title":"Creating an SSH Key","text":"<p>To securely connect to your instances you will need to create at least one SSH key pair. These are unique to your user and are available across all of your projects. Additional SSH keys can be also created if required.</p> CLIGUI <p>From <code>stack01</code>, ensure you have sourced the <code>openrc</code> file correctly and authenticated with Alces Cloud. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ source openrc\nPlease enter your password:\n</code></pre></p> <p>Create a new SSH key using the following command - the private key will be saved to the file <code>~/.ssh/mykeypair</code>. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ openstack keypair create mykeypair --private-key ~/.ssh/mykeypair\n+-------------+-------------------------------------------------+\n| Field       | Value                                           |\n+-------------+-------------------------------------------------+\n| created_at  | None                                            |\n| fingerprint | a1:b2:c3:d4:e5:f6:g7:h8:i9:j0:k1:l2:m3:n4:o5:p6 |\n| id          | mykeypair                                       |\n| is_deleted  | None                                            |\n| name        | mykeypair                                       |\n| type        | ssh                                             |\n| user_id     | a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6                |\n+-------------+-------------------------------------------------+\n</code></pre></p> <p>Ensure the file permissions are set correctly. <pre><code>(openstack) [myuser@stack01[poc1] ~]$ chmod 600 ~/.ssh/mykeypair\n</code></pre></p> <p>After creating your instances with the correct key pair <code>mykeypair</code>, you will be able to use this private key to access your instances with the <code>ssh</code> command.</p> <p>On the left side bar, navigate to <code>Compute</code> and then <code>Key Pairs</code>.</p> <p></p> <p>Click on the <code>Create Key Pair</code>, give your key pair a name and select <code>SSH Key</code> type.</p> <p></p> <p>Once you have created your key pair, a <code>.pem</code> file will be downloaded with your private key. Use this to later SSH to your instances.</p>"},{"location":"docs/storage/volumes/","title":"Volumes","text":"<p>A volume acts as the virtual hard drive for your instances. All instances are required to be booted from a volume and additional volumes can be attached to your instances if you require additional disks.</p> <p>Available volume types:</p> Volume Type I/O IOPs hdd.1 20 MB/s Read + Write 60 IOPs Read + Write"},{"location":"docs/storage/volumes/#create-a-new-volume","title":"Create a new volume","text":"<p>Volume creation is useful for attaching a second data volume to your instance.</p> CLIGUI <p>Create a new volume by specifying a suitable size and a name.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume create --size 100 myvolume\n+---------------------+--------------------------------------+\n| Field               | Value                                |\n+---------------------+--------------------------------------+\n| name                | myvolume                             |\n| size                | 100                                  |\n| status              | creating                             |\n| type                | hdd.1                                |\n+---------------------+--------------------------------------+\n</code></pre> <p>After a few moments, the volume should change to the <code>available</code> state.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume list\n+--------------------------------------+----------+-----------+------+-------------+\n| ID                                   | Name     | Status    | Size | Attached to |\n+--------------------------------------+----------+-----------+------+-------------+\n| e2b54ae8-98bc-475a-b644-906f8a46b1b2 | myvolume | available |  100 |             |\n+--------------------------------------+----------+-----------+------+-------------+\n</code></pre> <ol> <li>On the Alces Cloud dashboard, navigate to <code>Volume</code> and then <code>Volumes</code> on the left side menu.</li> <li>Click the <code>Create Volume</code> button.</li> <li>Enter a volume name and size.</li> <li>Click create volume.</li> </ol>"},{"location":"docs/storage/volumes/#attach-a-volume-to-an-instance","title":"Attach a volume to an instance","text":"CLIGUI <p>Attach the desired volume to your instance.</p> <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack server add volume myinstance myvolume\n+-----------------------+--------------------------------------+\n| Field                 | Value                                |\n+-----------------------+--------------------------------------+\n| Server ID             | b98a496d-13f7-4ce0-8a38-87e87fe56c2a |\n| Volume ID             | e2b54ae8-98bc-475a-b644-906f8a46b1b2 |\n| Device                | /dev/vdb                             |\n+-----------------------+--------------------------------------+\n</code></pre> <ol> <li>On the Alces Cloud dashboard, navigate to <code>Volume</code> and then <code>Volumes</code> on the left side menu.</li> <li>On the action dropdown menu for your volume, click <code>Manage Attachments</code>.</li> <li>Select the instance to attach the volume to, and then press <code>Attach Volume</code>.</li> </ol> <p>Once you have attached your volume, login to your instance to format and mount the volume as required.</p>"},{"location":"docs/storage/volumes/#mount-attached-volume-to-the-instance","title":"Mount attached volume to the instance","text":"<p>Once Volume is attached to the instance, let's login to instance <code>myinstance</code> using SSH. There will be additional disk available in the instance <code>/dev/vdb</code>.</p> <p>Note</p> <p><code>/dev/vdb</code> is used as an example here, but please ensure to verify the device name to avoid accidentally formatting your other volumes.</p> <ul> <li> <p>To verify if the volume was attached properly, run the command     <pre><code>[rocky@myinstance ~]$ sudo fdisk -l\nDisk /dev/vda: 10 GiB, 10737418240 bytes, 20971520 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: gpt\nDisk identifier: 07B147F9-8655-4FB3-8D30-B2F796D32ED8\n\nDevice       Start      End  Sectors  Size Type\n/dev/vda1     2048   204799   202752   99M EFI System\n/dev/vda2   204800  2252799  2048000 1000M Linux filesystem\n/dev/vda3  2252800  2260991     8192    4M PowerPC PReP boot\n/dev/vda4  2260992  2263039     2048    1M BIOS boot\n/dev/vda5  2265088 20969471 18704384  8.9G Linux filesystem\n\n\nDisk /dev/vdb: 100 GiB, 107374182400 bytes, 209715200 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n</code></pre></p> </li> <li> <p>In order to format device <code>/dev/vdb</code>, run the below commands     <pre><code>[rocky@myinstance ~]$ sudo fdisk /dev/vdb\n\nWelcome to fdisk (util-linux 2.37.4).\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\n\nDevice does not contain a recognized partition table.\nCreated a new DOS disklabel with disk identifier 0x76b921f3.\n\nCommand (m for help): g\nCreated a new GPT disklabel (GUID: B95E1AF7-B041-0243-BD25-C43676192090).\n\nCommand (m for help): n\nPartition number (1-128, default 1):\nFirst sector (2048-209715166, default 2048):\nLast sector, +/-sectors or +/-size{K,M,G,T,P} (2048-209715166, default 209715166):\n\nCreated a new partition 1 of type 'Linux filesystem' and of size 100 GiB.\n\nCommand (m for help): w\nThe partition table has been altered.\nCalling ioctl() to re-read partition table.\nSyncing disks.\n</code></pre></p> <p>Note</p> <p>For additional details regarding the formatting information for <code>fdisk</code>, refer to:  <pre><code>Help:\n\nGPT\nM   enter protective/hybrid MBR\n\nGeneric\nd   delete a partition\nF   list free unpartitioned space\nl   list known partition types\nn   add a new partition\np   print the partition table\nt   change a partition type\nv   verify the partition table\ni   print information about a partition\n\nMisc\nm   print this menu\nx   extra functionality (experts only)\n\nScript\nI   load disk layout from sfdisk script file\nO   dump disk layout to sfdisk script file\n\nSave &amp; Exit\nw   write table to disk and exit\nq   quit without saving changes\n\nCreate a new label\ng   create a new empty GPT partition table\nG   create a new empty SGI (IRIX) partition table\no   create a new empty DOS partition table\ns   create a new empty Sun partition table\n</code></pre></p> </li> <li> <p>Create ext4 file system on /dev/vdb disk:     <pre><code>[rocky@myinstance ~]$ sudo mkfs -t ext4 /dev/vdb\nmke2fs 1.46.5 (30-Dec-2021)\nFound a gpt partition table in /dev/vdb\nProceed anyway? (y,N) y\nCreating filesystem with 26214400 4k blocks and 6553600 inodes\nFilesystem UUID: 3e30912b-e49b-4640-acf3-647bc28271ca\nSuperblock backups stored on blocks:\n    32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,\n    4096000, 7962624, 11239424, 20480000, 23887872\n\nAllocating group tables: done\nWriting inode tables: done\nCreating journal (131072 blocks):\ndone\nWriting superblocks and filesystem accounting information: done\n</code></pre></p> </li> <li> <p>Now mount the device to a folder. here device <code>/dev/vdb</code> is mounted at folder <code>/data</code>.     <pre><code>sudo mkdir /data\nsudo mount /dev/vdb /data\n</code></pre></p> </li> <li> <p>Verify that volume is mounted successfully, use command below     <pre><code>[rocky@myinstance ~]$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\ndevtmpfs        4.0M     0  4.0M   0% /dev\ntmpfs           7.7G     0  7.7G   0% /dev/shm\ntmpfs           3.1G  8.6M  3.1G   1% /run\n/dev/vda5       8.9G  1.1G  7.9G  12% /\n/dev/vda2       936M  175M  762M  19% /boot\n/dev/vda1        99M  7.0M   92M   8% /boot/efi\ntmpfs           1.6G     0  1.6G   0% /run/user/1000\n/dev/vdb         98G   24K   93G   1% /data\n</code></pre></p> </li> </ul>"},{"location":"docs/storage/volumes/#extend-volume","title":"Extend Volume","text":"<p>Sometimes virtual machines need more space to accommodate increasing data, Extending volume is best solution to handle the increasing data.</p> <p>Note</p> <p>Before you resize the volume make sure to take care of below conditions.</p> <ul> <li>Detach the Volume: Resizing only works on unattached volumes. Ensure the volume you want to resize is detached from any instances.</li> <li>New Size: The new size must be greater than the current size. Shrinking volumes is not currently supported.</li> </ul> CLIGUI <ol> <li>List your volumes to identify the volume ID or Name using the following command:     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume list\n+--------------------------------------+----------+-----------+------+-------------+\n| ID                                   | Name     | Status    | Size | Attached to |\n+--------------------------------------+----------+-----------+------+-------------+\n| e2b54ae8-98bc-475a-b644-906f8a46b... | myvolume | available |  100 |             |\n+--------------------------------------+----------+-----------+------+-------------+\n</code></pre></li> <li>Once you have the volume ID, use the following command to resize the volume:     <pre><code>openstack volume set --size &lt;new_size&gt; &lt;volume_id_or_name&gt;\ne.g.\n(openstack) [user@stack01[poc1] ~]$ openstack volume set --size 105 e2b54ae8-98bc-475a-b644-906f8a46b...\n</code></pre></li> <li>Now Verify the size of volume.     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume list\n+--------------------------------------+----------+-----------+------+-------------+\n| ID                                   | Name     | Status    | Size | Attached to |\n+--------------------------------------+----------+-----------+------+-------------+\n| e2b54ae8-98bc-475a-b644-906f8a46b... | myvolume | available |  105 |             |\n+--------------------------------------+----------+-----------+------+-------------+\n</code></pre></li> </ol> <ol> <li>On the Alces Cloud dashboard, navigate to <code>Volume</code> and then <code>Volumes</code> on the left side menu.</li> <li>On the action dropdown menu for your volume, click <code>Extend Volume</code>.</li> <li>Enter the New Size (in GB) and click <code>Extend Volume</code>.</li> </ol> <p>The GUI will initiate the resize operation and provide you with progress updates.</p>"},{"location":"docs/storage/volumes/#volume-snapshot","title":"Volume Snapshot","text":"<p>Snapshot capture a specific state of a volume at a given time. They're ideal for quick rollbacks or creating disaster recovery points.</p> CLIGUI <ol> <li>List your volumes to identify the volume ID using the following command:     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume list\n+--------------------------------------+----------+-----------+------+-------------+\n| ID                                   | Name     | Status    | Size | Attached to |\n+--------------------------------------+----------+-----------+------+-------------+\n| b3aa108a-e35a-4686-ab33-761dbb653... | myvolume | available |   10 |             |\n+--------------------------------------+----------+-----------+------+-------------+\n</code></pre></li> <li> <p>Once you have the volume ID or Name, use the following command to create a snapshot:     <pre><code>openstack volume snapshot create --volume &lt;volume_id_or_name&gt; --description \"&lt;snapshot_description&gt;\"  &lt;snapshot_name&gt; \ne.g. \n(openstack) [user@stack01[poc1] ~]$ openstack volume snapshot create --volume b3aa108a-e35a-4686-ab33-761dbb653b60 --description \"myvolume snapshot\"  myvolume-snapshot\n+-------------+--------------------------------------+\n| Field       | Value                                |\n+-------------+--------------------------------------+\n| created_at  | 2024-03-26T11:17:34.366796           |\n| description | myvolume snapshot                    |\n| id          | 8c2635ef-2a04-4ab9-84aa-0ab601dcc... |\n| name        | myvolume-snapshot                    |\n| properties  |                                      |\n| size        | 10                                   |\n| status      | creating                             |\n| updated_at  | None                                 |\n| volume_id   | b3aa108a-e35a-4686-ab33-761dbb653... |\n+-------------+--------------------------------------+\n</code></pre>  with a desired name for your snapshot.      with an optional description (in quotes)      with the actual ID or Name  of your volume. <li> <p>Now Verify the snapshot of volume <code>myvolume</code>.     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume snapshot list\n+--------------------------------------+-------------------+-------------------+-----------+------+\n| ID                                   | Name              | Description       | Status    | Size |\n+--------------------------------------+-------------------+-------------------+-----------+------+\n| 8c2635ef-2a04-4ab9-84aa-0ab601dcc... | myvolume-snapshot | myvolume snapshot | available |   10 |\n+--------------------------------------+-------------------+-------------------+-----------+------+\n</code></pre></p> </li> <ol> <li>On the Alces Cloud dashboard, navigate to <code>Volume</code> and then <code>Volumes</code> on the left side menu.</li> <li>On the action dropdown menu for your volume, click <code>Create Snapshot</code>.</li> <li>Enter Name for your snapshot and optionally add a Description. and click <code>Create Volume Snapshot</code>.</li> </ol> <p>The GUI will initiate the snapshot operation and provide you with progress updates.</p>"},{"location":"docs/storage/volumes/#volume-backup","title":"Volume Backup","text":"<p>Backup create a copy of a volume that can be stored offsite or in a separate system. Backups provide a more robust solution for long-term data preservation and disaster recovery scenarios involving complete system outages.</p> CLIGUI <p>Backing Up Volume</p> <ol> <li> <p>List your volumes to identify the volume ID or Name using the following command:     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume list\n+--------------------------------------+----------+-----------+------+-------------+\n| ID                                   | Name     | Status    | Size | Attached to |\n+--------------------------------------+----------+-----------+------+-------------+\n| b3aa108a-e35a-4686-ab33-761dbb653... | myvolume | available |   10 |             |\n+--------------------------------------+----------+-----------+------+-------------+        \n</code></pre></p> </li> <li> <p>Once you have the volume ID or Name, use the following command to create a volume backup:     <pre><code>openstack volume backup create --name &lt;backup_name&gt; --description \"&lt;backup description&gt;\" &lt;volume_id_or_name&gt;\ne.g.\n(openstack) [user@stack01[poc1] ~]$ openstack volume backup create --name myvolume-backup --description \"myvolume backup\" myvolume\n+-----------+--------------------------------------+\n| Field     | Value                                |\n+-----------+--------------------------------------+\n| id        | aa150436-7098-4af5-a5f6-73eeec0de... |\n| name      | myvolume-backup                      |\n| volume_id | b3aa108a-e35a-4686-ab33-761dbb653... |\n+-----------+--------------------------------------+\n</code></pre></p> </li> <li>Now Verify the backup of volume <code>myvolume</code>.     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume backup list\n+--------------------------------------+-----------------+-----------------+-----------+------+-------------+\n| ID                                   | Name            | Description     | Status    | Size | Incremental |\n+--------------------------------------+-----------------+-----------------+-----------+------+-------------+\n| aa150436-7098-4af5-a5f6-73eeec0de... | myvolume-backup | myvolume backup | available |   10 | False       |\n+--------------------------------------+-----------------+-----------------+-----------+------+-------------+        \n</code></pre></li> </ol> <p>Backing Up Snapshot</p> <ol> <li>List your snapshots to identify the snapshot ID or Name using the following command:     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume snapshot list\n+--------------------------------------+-------------------+-------------+-----------+------+\n| ID                                   | Name              | Description | Status    | Size |\n+--------------------------------------+-------------------+-------------+-----------+------+\n| 5dc327db-c1c7-4593-a60e-57508fa4b... | myvolume-snapshot |             | available |   10 |\n+--------------------------------------+-------------------+-------------+-----------+------+        \n</code></pre></li> <li>Once you have the snapshot ID or Name, use the following command to create a snapshot backup:     <pre><code>openstack volume backup create --name &lt;backup_name&gt; --description \"&lt;backup description&gt;\" --snapshot &lt;snapshot_id_or_name&gt; &lt;volume_id_or_name&gt;\ne.g.\n(openstack) [user@stack01[poc1] ~]$ openstack volume backup create --name backup_name --description \"&lt;backup description&gt;\" --snapshot  5dc327db-c1c7-4593-a60e-57508fa4b... myvolume\n+-----------+--------------------------------------+\n| Field     | Value                                |\n+-----------+--------------------------------------+\n| id        | 39e2f814-5985-4a85-8963-3168efb99... |\n| name      | backup_name                          |\n| volume_id | b3aa108a-e35a-4686-ab33-761dbb653... |\n+-----------+--------------------------------------+\n</code></pre></li> <li>Now Verify the backup of volume <code>myvolume</code>.     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume backup list\n+--------------------------------------+-----------------+----------------------+-----------+------+-------------+\n| ID                                   | Name            | Description          | Status    | Size | Incremental |\n+--------------------------------------+-----------------+----------------------+-----------+------+-------------+\n| 39e2f814-5985-4a85-8963-3168efb99... | backup_name     | &lt;backup description&gt; | available |   10 | False       |\n+--------------------------------------+-----------------+----------------------+-----------+------+-------------+\n</code></pre></li> </ol> <p>Backing Up Volume</p> <ol> <li>On the Alces Cloud dashboard, navigate to <code>Volume</code> and then <code>Volumes</code> on the left side menu.</li> <li>On the action dropdown menu for your volume, click <code>Create Backup</code>.</li> <li>Enter Name for your backup and optionally add a Description. and click <code>Create Volume Backup</code>.</li> </ol> <p>The GUI will initiate the backup operation and provide you with progress updates.</p> <p>Backing Up Snapshot</p> <ol> <li>On the Alces Cloud dashboard, navigate to <code>Volume</code> and then <code>Snapshots</code> on the left side menu.</li> <li>On the action dropdown menu for your snapshot, click <code>Create Backup</code>.</li> <li>Enter Name for your backup, optionally add a Description and optionally add container name. and click <code>Create Volume Backup</code>.</li> </ol> <p>The GUI will initiate the backup operation and provide you with progress updates.</p>"},{"location":"docs/storage/volumes/#volume-restore","title":"Volume Restore","text":"CLIGUI <ol> <li> <p>List your volume backups to identify the volume backup ID or Name using the following command:     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume backup list\n+--------------------------------------+-----------------+-------------+-----------+------+-------------+\n| ID                                   | Name            | Description | Status    | Size | Incremental |\n+--------------------------------------+-----------------+-------------+-----------+------+-------------+\n| 078d3bc2-cc87-4fe7-b916-551e72f660d4 | myvolume-backup |             | available |   10 | False       |\n+--------------------------------------+-----------------+-------------+-----------+------+-------------+\n</code></pre></p> </li> <li> <p>Once you have the volume backup ID or Name, use the following command to restore backup to volume:     <pre><code>openstack volume backup restore &lt;backup_id_or_name&gt; &lt;volume_id_or_name&gt;\n\n# &lt;volume_id_or_name&gt;: name or ID for existing volume, name only for new volume\ne.g.\n(openstack) [user@stack01[poc1] ~]$ openstack volume backup restore myvolume-backup new-volume-restore\n</code></pre></p> </li> <li> <p>Now Verify the backup of volume <code>myvolume</code>.     <pre><code>(openstack) [user@stack01[poc1] ~]$ openstack volume list\n+--------------------------------------+--------------------+-----------+------+-------------+\n| ID                                   | Name               | Status    | Size | Attached to |\n+--------------------------------------+--------------------+-----------+------+-------------+\n| 0447f7e6-1bb8-4938-8c73-ce21db45184c | new-volume-restore | available |   10 |             |\n| b3aa108a-e35a-4686-ab33-761dbb653b60 | myvolume           | available |   10 |             |\n+--------------------------------------+--------------------+-----------+------+-------------+        \n</code></pre></p> </li> </ol> <ol> <li>On the Alces Cloud dashboard, navigate to <code>Volume</code> and then <code>Backups</code> on the left side menu.</li> <li>On the action dropdown menu for your backup, click <code>Restore Backup</code>.</li> <li>You may select create a new volume or select an existing volume to overwrite, then click <code>Restore Backup to Volume</code>.</li> </ol> <p>The GUI will initiate the restore operation and provide you with progress updates.</p>"},{"location":"docs/troubleshooting/","title":"Troubleshooting","text":"<p>This section is designed to help users facing common issues when using Alces Cloud.</p>"},{"location":"docs/troubleshooting/faq/","title":"Frequently Asked Questions","text":"<p>Please see below for some of the most common issues that our users have (and solutions!)</p>"},{"location":"docs/troubleshooting/faq/#how-do-i-connect-to-my-instances","title":"How do I connect to my instances?","text":"<p>Access to your instances is provided via floating IP addresses and the secure VPN service. Click here for our Getting Started guide.</p>"},{"location":"docs/troubleshooting/faq/#im-get-the-message-ssh-connect-to-host-se1alcesnetwork-port-22-connection-refused-upon-trying-to-ssh-into-my-login-node","title":"I'm get the message <code>ssh: connect to host se1.alces.network port 22: Connection refused</code> upon trying to SSH into my login node","text":"<p>For security, we run a service which temporarily blocks IP addresses after 3 failed login attempts. If you are struggling to login, please try again after 1 hour.</p>"},{"location":"docs/troubleshooting/faq/#i-cant-access-my-instance-from-my-laptop-terminal","title":"I can't access my instance from my laptop terminal","text":"<ul> <li>Make sure you are connected to the Alces Cloud VPN (and that your machine has a 10.199.X.X IP address)</li> <li>Ensure that you have configured the security groups for your instance correctly (eg. Add the 'ssh access' security group if you wish to ssh into your instance)</li> </ul>"},{"location":"docs/troubleshooting/faq/#my-disk-speeds-arent-performing-as-well-as-id-expect","title":"My disk speeds aren't performing as well as I'd expect","text":"<p>We offer a number of different storage options on Alces Cloud - utilising the 'ephemeral disk' available with your flavor selection will offer greater performance</p>"},{"location":"docs/troubleshooting/faq/#what-types-of-nodes-are-currently-available-through-alces-cloud","title":"What types of nodes are currently available through Alces Cloud?","text":"<p>Alces Cloud offers exclusive access to the CPU cores on the instances that you create, backed by physical resource, ensuring that you get the best performance per core possible</p>"},{"location":"docs/troubleshooting/faq/#i-have-available-compute-quota-but-im-getting-an-error-launching-my-instances","title":"I have available compute quota but I'm getting an error launching my instances","text":""},{"location":"docs/troubleshooting/instances/","title":"Instances","text":"<p>One of the basic principles of cloud computing is that things can go wrong. This section is designed to help with common issues you may face when creating and using your instances.</p>"},{"location":"docs/troubleshooting/instances/#connection-refused-connection-timed-out","title":"Connection refused / Connection timed out","text":"<p>When trying to SSH to your instances, you may be faced with a connection error.</p> <pre><code>[user@fedora ~]$ ssh -i MyKeypair.pem rocky@10.199.31.5\nssh: connect to host 10.199.31.5 port 22: Connection refused\n</code></pre> <ul> <li>Ensure your instance has properly booted by waiting a few minutes and then trying again. You can also use the Alces Cloud dashboard to view the remote console and confirm the instance has correctly booted.</li> <li>Ensure that you instance has been configured with the appropriate security groups. Further information on security groups can be found here.</li> </ul>"},{"location":"docs/troubleshooting/instances/#host-key-verification-failed","title":"Host key verification failed","text":"<p>When reusing an existing floating IP that has previously been used for another instance, your ssh client may prevent you from connecting to the new instance with a host key error:</p> <pre><code>[user@fedora ~]$ ssh -i MyKeypair.pem rocky@10.199.31.5\nHost key verification failed.\n</code></pre> <p>To resolve this, remove the previous host key for that floating IP address and then try to connect to your instance again. You may be asked to accept the new host key as well.</p> <pre><code>[user@fedora ~]$ ssh-keygen -R 10.199.31.5\n</code></pre>"},{"location":"docs/troubleshooting/instances/#associate-floating-ip-no-ports-available","title":"Associate Floating IP - No ports available","text":"<p>When associating a floating IP to an instance, you will be given a dropdown to select the port on the instance to use. If no ports are available, then it is likely the network chosen has not been connected properly.</p> <p></p> <ul> <li>Check the network being used is connected to a router.</li> <li>Check the router the network is connected to is also connected to the Alces Cloud external network.</li> </ul> <p>More information on networks can be found here.</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/se1/","title":"se1","text":""},{"location":"blog/page/2/","title":"Index","text":""},{"location":"blog/archive/2024/page/2/","title":"2024","text":""},{"location":"blog/category/se1/page/2/","title":"se1","text":""}]}